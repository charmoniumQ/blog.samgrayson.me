<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en_US"><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://samgrayson.me/feed.xml" rel="self" type="application/atom+xml"/><link href="https://samgrayson.me/" rel="alternate" type="text/html" hreflang="en_US"/><updated>2021-01-01T11:18:55-06:00</updated><id>https://samgrayson.me/feed.xml</id><title type="html">Interesting Thoughts</title><subtitle>Blog about computers, mathematics, and philosophy. Occasionally, other people find my thoughts on these topics interesting.</subtitle><author><name>Samuel Grayson</name></author><entry><title type="html">Stop writing shell scripts</title><link href="https://samgrayson.me/2021-01-01-shell/" rel="alternate" type="text/html" title="Stop writing shell scripts"/><published>2021-01-01T00:00:00-06:00</published><updated>2021-01-01T00:00:00-06:00</updated><id>https://samgrayson.me/shell</id><content type="html" xml:base="https://samgrayson.me/2021-01-01-shell/">&lt;p&gt;UNIX shell isn’t a real programming language, so stop using like one!&lt;/p&gt; &lt;p&gt;There are occasions one &lt;em&gt;has&lt;/em&gt; to use shell due to the structure of UNIX (e.g. the hash-bang, &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/init.d/&lt;/code&gt;). I won’t indict the REPL because one doesn’t have to maintain what one types in the REPL. As with anything, there are cases where the entire system or team is historically based on UNIX shell and pushing against that inertia would cause immense pain, but every other automation task would be better in a language like Python, Ruby, or if you insist, even Perl.&lt;/p&gt; &lt;p&gt;The distinguishing factor between these “real” programming languages and shell, for the purposes of this article, is the ability to define datatypes. Many other undesirable qualities derive from this. There are strongly typed languages and weakly typed ones. Then there’s 50 feet of crap, and &lt;em&gt;then&lt;/em&gt; there’s shell.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/shell/moneyball.png&quot; /&gt;&lt;/p&gt; &lt;p&gt;A cornerstone of UNIX wisdom is that “plaintext is the universal interface.” Hence, it is not strongly typed; it’s &lt;em&gt;stringly&lt;/em&gt; typed.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;After all, floats, ints, strings can all be encoded as strings.&lt;/li&gt; &lt;li&gt;Lists of such can be colon-separated (like &lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH&lt;/code&gt;), space-separated (like shell arguments), tab-separated (like &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -l $file&lt;/code&gt;), or line-separated (like &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;Lists of lists of such can be represented as a line-separated list of tab-separated lists (like &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -l&lt;/code&gt;). I call these &lt;em&gt;simple datatypes&lt;/em&gt;. Representing &lt;em&gt;complex datatypes&lt;/em&gt; is done on an ad hoc basis.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;simple-datatypes&quot;&gt;Simple datatypes&lt;/h3&gt; &lt;p&gt;Even within simple datatypes, life is hard: if &lt;code class=&quot;highlighter-rouge&quot;&gt;var=&quot;name with space&quot;&lt;/code&gt;, then &lt;code class=&quot;highlighter-rouge&quot;&gt;command $var&lt;/code&gt; expands to &lt;code class=&quot;highlighter-rouge&quot;&gt;command name with space&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;$var&lt;/code&gt; is a makeshift list) rather than &lt;code class=&quot;highlighter-rouge&quot;&gt;command &quot;name with space&quot;&lt;/code&gt; by default, when the programmer usually intends the latter. While this behavior can be avoided with quotes around &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;$var&quot;&lt;/code&gt;, this default makes it easier to write shell scripts incorrectly in a way you won’t notice until you try a specially-crafted string.&lt;/p&gt; &lt;p&gt;Quoting does not even solve the problem completely. Suppose &lt;code class=&quot;highlighter-rouge&quot;&gt;var='a &quot;b c&quot;'&lt;/code&gt;. Then &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;$var&quot;&lt;/code&gt; expands to one argument (&lt;code class=&quot;highlighter-rouge&quot;&gt;a &quot;b c&quot;&lt;/code&gt;), while &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;$var&quot;&lt;/code&gt; expands to three (&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;b&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;c&quot;&lt;/code&gt;). As far as I know, there is no way of making &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; expand to two arguments (&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;b c&lt;/code&gt;) short of writing your own lexer in shell or calling &lt;code class=&quot;highlighter-rouge&quot;&gt;eval&lt;/code&gt; (according to the all-knowing &lt;a href=&quot;https://superuser.com/questions/1066455/how-to-split-a-string-with-quotes-like-command-arguments-in-bash&quot;&gt;Stack Overflow&lt;/a&gt;). Bash tries to fix this with arrays, (&lt;code class=&quot;highlighter-rouge&quot;&gt;var=(a &quot;b c&quot;)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;${var[@]}&quot;&lt;/code&gt;), but critically there is no easy way to pass multiple bash arrays to another script or even another function in the same script.&lt;/p&gt; &lt;p&gt;A &lt;a href=&quot;https://news.ycombinator.com/item?id=8442467&quot;&gt;defender of shell&lt;/a&gt; says “We should strive to build our software… so that exceptions like a filename with an odd character in it just don’t exist. Until we reach that point, computers will continue to frustrate their users for no good reason.” But there &lt;strong&gt;is&lt;/strong&gt; a better way! It’s using a real programming language.&lt;/p&gt; &lt;p&gt;The thorns of shell programming infect the rest of the system. For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH&lt;/code&gt; contains a colon-separated list-of-strings. What if one of those strings needs to have a colon in it? &lt;code class=&quot;highlighter-rouge&quot;&gt;scp&lt;/code&gt; also uses a colon to separate two elements of a pair (the hostname and the path), but what if the filename contains a colon? Colon is technically &lt;a href=&quot;https://en.wikipedia.org/wiki/Filename#Comparison_of_filename_limitations&quot;&gt;a reserved character&lt;/a&gt;, but this reservation is (usually) not checked when creating a file–apparently the system prefers to silently fail later on instead.&lt;/p&gt; &lt;p&gt;Good luck using a string to hold non-trivial encodings or binary data.&lt;/p&gt; &lt;h3 id=&quot;complex-datatypes&quot;&gt;Complex datatypes&lt;/h3&gt; &lt;p&gt;Complex datatypes are even more ad hoc. Perhaps, the designers of shell did not envision so many tools requiring complex datatypes. But today, a plethora tools I use regularly do. Instead of plaintext, many newer tools (&lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;gcloud&lt;/code&gt;) often have an option to output structured data as JSON for lossless interpretation by a real programming language.&lt;/p&gt; &lt;p&gt;The shell’s inability to natively represent datatypes affects how people think about the rest of the system. For example, “How should the kernel communicate complex datastructures to userspace? As a filesystem tree, where each file is a table or string, of course!” This gives rise to the systree and proctree that uses &lt;a href=&quot;https://lwn.net/Articles/378884/&quot;&gt;a plethora of different ad hoc representations&lt;/a&gt;, in which it is difficult to &lt;a href=&quot;https://lwn.net/Articles/356152/&quot;&gt;take a consistent snapshot&lt;/a&gt; of the data.&lt;/p&gt; &lt;p&gt;I have a friend who says any system operation I can do in Python, he can do in an &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt; one-liner. As a one-off command, I understand that’s a useful skill. But if you need to do this task in a stored procedure, this is the &lt;em&gt;least&lt;/em&gt; maintainable option. If anyone needs to tweak the task (including the original author after one month), they usually have to figure out what it does and &lt;em&gt;rewrite another one&lt;/em&gt;, hopefully in a real language this time.&lt;/p&gt; &lt;p&gt;Even &lt;a href=&quot;https://en.wikipedia.org/wiki/Eric_S._Raymond&quot;&gt;Eric S. Raymond&lt;/a&gt;, classic UNIX hacker, weighed in against shell:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;As a general scripting language shell sucks &lt;em&gt;really badly&lt;/em&gt; compared to anything new-school. Performance, portability, you name it, it’s a mess. It’s not so much the shell interpreters itself that are the portabilty [sic] problem, but (as Magnus implicitly points out) all those userland dependencies on sed and tr and awk and even variants of expr(!) that get dragged in the second you try to get any actual work done.&lt;/p&gt; &lt;p&gt;Some old-school Unix habits have persisted long past the point that they’re even remotely sane. Shell programming at any volume above a few lines of throwaway code is one of them - it’s &lt;em&gt;nuts&lt;/em&gt; and we should &lt;em&gt;stop doing it&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;Eric S. Raymond in &lt;a href=&quot;https://lwn.net/Articles/527308/&quot;&gt;LWN&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;h3 id=&quot;knuth-vs-mcilroy-is-orthogonal-to-ditching-shell&quot;&gt;Knuth vs McIlroy is orthogonal to ditching shell&lt;/h3&gt; &lt;p&gt;Someone is bound to mention the famous spar between Doug McIlroy and Donald Knuth (much has been written regarding this: &lt;a href=&quot;http://www.leancrew.com/all-this/2011/12/more-shell-less-egg/&quot;&gt;summary&lt;/a&gt;, &lt;a href=&quot;https://buttondown.email/hillelwayne/archive/donald-knuth-was-framed/&quot;&gt;Knuth was framed&lt;/a&gt;, &lt;a href=&quot;https://www.spinellis.gr/blog/20200225/&quot;&gt;Knuth wasn’t framed&lt;/a&gt;, &lt;a href=&quot;https://news.ycombinator.com/item?id=18699718&quot;&gt;HN debate&lt;/a&gt;). Donald Knuth was asked to compute word frequencies from its input (“a” =&amp;gt; 10, “the” =&amp;gt; 7, “them” =&amp;gt; 3, …). He wrote a 6-page Pascal program from scratch and invented a novel datastructure. Doug McIlroy wrote a 6-line shell program which did the same thing.&lt;/p&gt; &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-cs&lt;/span&gt; A-Za-z &lt;span class=&quot;s1&quot;&gt;'\n'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr &lt;/span&gt;A-Z a-z | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;uniq&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rn&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;q &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The transferrable point of McIlroy’s comment was that Knuth built everything from scratch to maximize asymtotic performance, while McIlroy wrote an equivalent although less performant solution by cobbling together existing tools. Nothing about it is inherent to shell or pipes. I would offer this Python program:&lt;/p&gt; &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[a-z]+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most_common&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;I believe it carries the same lesson from McIlroy’s solution (since it reuses tools: &lt;a href=&quot;https://docs.python.org/3/library/re.html&quot;&gt;regular expressions&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.Counter&quot;&gt;collections.Counter&lt;/a&gt;), but unlike McIlroy’s solution, it’s easier to read, easier to modify (try making it split words containing apostrophes more intelligently), gives better error messages (try passing in a non-integer argument), and it’s about &lt;a href=&quot;https://stackoverflow.com/a/56958255/1078199&quot;&gt;4 times faster&lt;/a&gt;.&lt;/p&gt; &lt;h3 id=&quot;poor-datatypes-implies-poor-programming-language-constructs&quot;&gt;Poor datatypes implies poor programming-language constructs&lt;/h3&gt; &lt;p&gt;Not everyone likes exceptions, but you have to agree a &lt;em&gt;stacktrace&lt;/em&gt; is useful (for example, pass a non-integer argument to the previous program). Shell by default doesn’t even stop for errors, and if you unset that default (&lt;code class=&quot;highlighter-rouge&quot;&gt;set -e&lt;/code&gt;), it doesn’t tell you what line errored out. You have to enable printing all lines (potentially many!) with &lt;code class=&quot;highlighter-rouge&quot;&gt;set -x&lt;/code&gt; to get remotely useful diagnostics.&lt;/p&gt; &lt;p&gt;It is difficult to do parallelism in shell. Because shell is based on fork-and-exec, there is no such thing as lightweight thread-level parallelism. As for process-level parallelism, you’ve got the option to manually pass around pids (&lt;code class=&quot;highlighter-rouge&quot;&gt;command &amp;amp; ; pid=&quot;${!}&quot;&lt;/code&gt;), use &lt;code class=&quot;highlighter-rouge&quot;&gt;xargs&lt;/code&gt;, or use &lt;a href=&quot;https://www.gnu.org/software/parallel/&quot;&gt;GNU Parallel&lt;/a&gt;. It’s only fun for the very simplest kinds of problems.&lt;/p&gt; &lt;p&gt;Lack of datatypes implies the inability to statically type-check programs.&lt;/p&gt; &lt;h1 id=&quot;actionable-advice&quot;&gt;Actionable Advice&lt;/h1&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;Stop writing shell scripts! Instead reach for a &lt;em&gt;real&lt;/em&gt; language like Python. You can still benefit from reusing software, but at a language-level.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Write functions instead of scripts, function parameters instead of script arguments, &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt;, and objects instead of stringified data. This makes your software easier to reuse than a shell script.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you have to call out to shell, bubble-wrap the shell command in a regular function. This is good software engineering, it permits you to switch to a native API call later on, and &lt;code class=&quot;highlighter-rouge&quot;&gt;clang(..., debugging_symbols=True)&lt;/code&gt; is far more readable than &lt;code class=&quot;highlighter-rouge&quot;&gt;clang ... -g&lt;/code&gt; if you don’t remember what &lt;code class=&quot;highlighter-rouge&quot;&gt;-g&lt;/code&gt; stands for.&lt;/p&gt; &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a.out&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;libs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimizations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opt_level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debugging_symbols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;clang&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-I{include}&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-l{lib}&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;libs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-f&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;no-&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimization&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'_'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimizations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-O{opt_level}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debugging_symbols&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-o&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you &lt;em&gt;have&lt;/em&gt; to talk to some other program by a command-line interface,&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Implement a language-level interface first, and then a command-line interface that sanatizes the inputs and calls into the language-level interface. It’s good software engineering practice, and it also gives other programs the option of composing at the language-level. I like to use &lt;a href=&quot;https://click.palletsprojects.com/en/7.x/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;click&lt;/code&gt;&lt;/a&gt; for the CLI.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add a &lt;code class=&quot;highlighter-rouge&quot;&gt;--output={json,text,auto}&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt; is good if the other program is written in a real programming language (they can just &lt;code class=&quot;highlighter-rouge&quot;&gt;json.load(sys.stdin)&lt;/code&gt;). It also permits using &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jq&lt;/code&gt;&lt;/a&gt; to slice-and-dice the JSON instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; to slice-and-dice the text. &lt;code class=&quot;highlighter-rouge&quot;&gt;auto&lt;/code&gt; can decided between them by checking if stdin is a TTY. Many UNIX tools already do something analogous to decide if they should colorize the output.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;stderr can be plaintext—that is probably going to be read by a human.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Don’t use raw &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt;s. You can use &lt;a href=&quot;https://tqdm.github.io/docs/tqdm/&quot;&gt;tqdm&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3/howto/logging.html#logging-basic-tutorial&quot;&gt;logging&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3/library/warnings.html&quot;&gt;warnings&lt;/a&gt;, and exceptions instead. This makes it easier to gracefully reuse your code in another project.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c1&quot;&gt;# Language-level interface &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_cool_thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_cool_thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Command-line interface &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# importing click here permits clients to use the &lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# language-level interface without installing click &lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;click&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# click parses a CLI options and generates `--help` text &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;auto&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isatty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_cool_thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_cool_thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unrecognized format {format!r}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Packages are the only piece I don’t have a good strategy for yet. Here are the strategies I have tried:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;try&lt;/code&gt; importing a package, and if that fails &lt;code class=&quot;highlighter-rouge&quot;&gt;pip.main([&quot;install&quot;, &quot;--user&quot;, package])&lt;/code&gt; (after confirming with the user of course).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;poetry&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;pipenv&lt;/code&gt;, or raw &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt; for each project. This requires writing a two-line shell script to call the script from with the virtualenv; shell may be structurally unavoidable there.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;cx_freeze&lt;/code&gt; inside a &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt; to compile your script into an executable which can be called from outside the &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt;. This might also benefit from a shell “launcher” that checks to see if the binary is out-of-date with the source. You would only have to write that shell script once.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Just expecting it to be installed.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;I’ve implemented these ideas in many projects, including my most recent: &lt;a href=&quot;https://illixr.github.io/&quot;&gt;ILLIXR&lt;/a&gt;. We used to have a shell script to build-and-run the system, then a &lt;code class=&quot;highlighter-rouge&quot;&gt;Makefile&lt;/code&gt;, and then I upgraded it following the guidelines in this section to a &lt;a href=&quot;https://github.com/ILLIXR/ILLIXR/tree/master/runner/runner/main.py&quot;&gt;launcher script&lt;/a&gt;. The script makes it far easier to launch ILLIXR different configurations programatically.&lt;/p&gt; &lt;h3 id=&quot;cons-of-a-real-language&quot;&gt;Cons of a Real Language&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;I must concede that the UNIX REPL, despite its warts, is efficient for those who invest time in it. It is useful to build a script out of commands one can test at a REPL. &lt;ul&gt; &lt;li&gt;Perhaps real-language REPLs like &lt;a href=&quot;https://xon.sh/&quot;&gt;Xonsh&lt;/a&gt; (based on Python) and &lt;a href=&quot;http://ammonite.io/&quot;&gt;Ammonite&lt;/a&gt; (based on Scala) will get better, and satisfy the need for rapid prototyping while using real datatypes.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Python is far more complex and difficult to implement from scratch than a shell.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Python scripts are somewhat less portable since they depend on Python, but they are also somewhat more portable since Python is a compatibility layer over the underlying OS (most Python scripts are trivially Windows and UNIX compatibile!).&lt;/p&gt; &lt;/li&gt; &lt;li&gt;It may be less debuggable, because the intermediates are not human-readable plaintext. &lt;ul&gt; &lt;li&gt;This can be partly mitigated in two ways: In a language context, one can give objects a printable representation with&lt;code class=&quot;highlighter-rouge&quot;&gt;__str__/to_string&lt;/code&gt; (often defined automatically); between processes, one can change&lt;code class=&quot;highlighter-rouge&quot;&gt;--format=json&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;--format=text&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Writing small shell utilities makes it easier to interact with other languages. Perhaps, &lt;em&gt;this&lt;/em&gt; is Doug McIlroy’s vision. Not just reusing software but doing so at the CLI-level rather than language-level. &lt;ul&gt; &lt;li&gt;This can be partly mitigated by writing a language-interface first and a shell-interface on top. This is common practice, as demonstrated by &lt;a href=&quot;https://tqdm.github.io/&quot;&gt;tqdm&lt;/a&gt;, &lt;a href=&quot;https://pyserial.readthedocs.io/en/latest/tools.html#module-serial.tools.miniterm&quot;&gt;Pyserial’s miniterm&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/jinja-cli/&quot;&gt;jinja-cli&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3/library/http.server.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http.server&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;a-new-vision-for-shell&quot;&gt;A new vision for shell?&lt;/h3&gt; &lt;p&gt;The case against using the UNIX shell as a REPL is less clear cut. Most of my arguments regarding maintainability and edge-cases carry less weight at the REPL since they only have to work once, under an engineer’s supervision. Any change to the shell threatens the existing repertoire of “muscle memory,” honed over decades. But even only as a hypothetical consideration, it is worth imagining what shell &lt;em&gt;could&lt;/em&gt; be if it supported datatypes natively.&lt;/p&gt; &lt;p&gt;Invent a language is hard work, so why not reuse an existing one? Most existing languages are a bit too verbose, butone can write a front-end with syntactic sugar. This is exactly what &lt;a href=&quot;https://xon.sh/&quot;&gt;Xonsh&lt;/a&gt; and &lt;a href=&quot;http://ammonite.io/&quot;&gt;Ammonite&lt;/a&gt; do. Although the resulting syntax may resemble UNIX shell, real datatypes are flowing through the pipes.&lt;/p&gt; &lt;p&gt;A more revolutionary approach is to fulfill the vision of shell, but in a modern context with datatypes. This is what PowerShell tries to be.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I originally took the UNIX tools and made them available on Windows, and then it just didn’t work. Right? Because there’s a core architectural difference between Windows and Linux. On Linux, everything’s an ASCII text file… In Windows, everything’s an API that returns structured data… I came up with this idea of PowerShell… It’s a pipeline of objects and with the objects, you know, there’s none of the prayer-based parsing.&lt;/p&gt; &lt;p&gt;–Jeffrey Snover in an interview with &lt;a href=&quot;https://www.heavybit.com/library/podcasts/to-be-continuous/ep-37-the-man-behind-windows-powershell/&quot;&gt;To Be Continuous&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;h1 id=&quot;prior-discussion&quot;&gt;Prior discussion&lt;/h1&gt; &lt;p&gt;This is not an original idea, but I think my presentation of it is unique.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=3329668&quot;&gt;This HN thread&lt;/a&gt; is particularly prescient. &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jhpriestley&lt;/code&gt; reads McIlroy’s point about composition specifically to shell, and does not consider reusing language libraries as “composition” (I obviously do). Most commenters respond with disagreemnt.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nwmcsween&lt;/code&gt; says exactly what I was thinking, “Composition should be of libraries or algorithms not arbitrary black box programs with n different options”. But I would amend this to say that black-box composition is a &lt;em&gt;fallback&lt;/em&gt; if you have to go between languages and don’t have enough time to write a native API.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Ted Kaminski applies a similar critique &lt;a href=&quot;https://www.tedinski.com/2018/05/08/case-study-unix-philosophy.html&quot;&gt;to UNIX philosophy&lt;/a&gt; more broadly; he says what I am trying to far more generally and eloquently. I have chosen to focus my ire on just shell scripts because I hope to make more progress arguing the most narrow, concrete, and practical point first.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=8437687&quot;&gt;This HN Thread&lt;/a&gt; also features a lively debate. &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;felixgallo&lt;/code&gt; points out that teaching shell is easier than teaching a map, reduce, and filter. I won’t argue the subjective point of which is easier, but it is incontroversial that most CS students are more interested in learning a real language than shell for employability reasons.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rsync&lt;/code&gt; says there is no better alternative, while &lt;code class=&quot;highlighter-rouge&quot;&gt;felixgallo&lt;/code&gt; claims one is 20 years away, since existing tools would have to be ported. Here’s the better alternative: Python for scripts, Xonsh for REPL. It already has an equivalent of most tools (&lt;code class=&quot;highlighter-rouge&quot;&gt;ls -&amp;gt; os.listdir&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tr -&amp;gt; re.sub&lt;/code&gt;, etc.), the tools can be trivially ported (like &lt;code class=&quot;highlighter-rouge&quot;&gt;wc -l -&amp;gt; open(...).read().count(&quot;\n&quot;)&lt;/code&gt;), or the tool can just be wrapped an existing in a function.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;am-i-a-zealot&quot;&gt;Am I a zealot?&lt;/h3&gt; &lt;p&gt;I realize the potential hypocrisy of writing this after &lt;a href=&quot;https://samgrayson.me/2016-08-12-zealots-of-tech/&quot;&gt;Zealots of Tech&lt;/a&gt;. The point of Zealots of Tech is to think critically about hard-and-fast rules; there might be a use-case where your favorite tool is less appropriate. I have stated some of those use-cases in the second paragraph, which is all I can think of right now (I welcome counter-examples in the comments).&lt;/p&gt; &lt;p&gt;Disqus’s free tier has disgusting ads, so I switched away from it. You can comment in one of these places instead:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=25604501&quot;&gt;HackerNews&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://twitter.com/charmoniumQ/status/1345049520602828801&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Most systems engineers I know worship the UNIX shell and its philosophy, so I have braced myself for a reaction (looking at you, HN). 98% of the time, I agree with them, and the other 2% worked really well for three decades. I am genuinely interested in opposing opinions, so drop a comment explaining why shell scripts are useful.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/shell/winter-is-coming.jpg&quot; /&gt;&lt;/p&gt;</content><author><name>Samuel Grayson</name></author><category term="programming"/><summary type="html">UNIX shell isn't a real programming language, so stop using like one!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samgrayson.me/assets/img/shell/moneyball.png"/></entry><entry><title type="html">The Most Important Constitutional Amendment You’ve Never Heard Of</title><link href="https://samgrayson.me/2020-12-27-fourteenth/" rel="alternate" type="text/html" title="The Most Important Constitutional Amendment You've Never Heard Of"/><published>2020-12-27T00:00:00-06:00</published><updated>2020-12-27T00:00:00-06:00</updated><id>https://samgrayson.me/fourteenth</id><content type="html" xml:base="https://samgrayson.me/2020-12-27-fourteenth/">&lt;p&gt;This amendment lies at the heart of issues on the left &lt;em&gt;and&lt;/em&gt; right: granting abortion rights, gay marriage, contraceptive rights, limiting gerrymandering, gun rights, limiting affirmative action, resolving the famous Presidential Election of 2000, and the status of women in the draft. If you care about any of these subjects, no matter you opinion, you &lt;strong&gt;have&lt;/strong&gt; to understand the constitutional amendment at the center all of those debates in order to have an informed opinion. It is the most influential part of the constitution on daily life. It’s not any of the Bill of Rights; They actually had a legal loophole that this amendment would close.&lt;/p&gt; &lt;p&gt;Can you guess what it is?&lt;/p&gt; &lt;p&gt;I am of course, referring to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Fourteenth_Amendment_to_the_United_States_Constitution&quot;&gt;Fourteenth Amendment&lt;/a&gt;. The Fourteenth is unique even among other “freedom granting” amendments because it does not protect any &lt;em&gt;specific liberty&lt;/em&gt; (for example, freedom of speech); Instead it protects &lt;em&gt;liberty in general&lt;/em&gt;. As a consequence, it has been used to give us liberties that its framers could never have imagined, such as access to contraception. This opens the door for a non-legislative policy response to unequal institutions like bail and police, when state and federal congresses are too gridlocked to act. But to get there, we have to start with the historical context.&lt;/p&gt; &lt;h1 id=&quot;historical-context-briefly&quot;&gt;Historical Context (briefly)&lt;/h1&gt; &lt;p&gt;The North won the Civil War and outlawed slavery in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Thirteenth_Amendment_to_the_United_States_Constitution&quot;&gt;Thirteenth Amendment&lt;/a&gt; (finally). Being nominally free wasn’t enough; abolitionists realized that the federal government needed to protect the newly freed slaves from persecution. They legislated the Fourteenth Amendment to protect their freedom. It was written to apply to all Americans, so it has huge implications for society today. There are three important clauses for us today: the Priveleges and Immunities Clause, the Due Process Clause, and the Equal Protection Clause.&lt;/p&gt; &lt;h1 id=&quot;privileges-and-immunities-clause&quot;&gt;Privileges and Immunities Clause&lt;/h1&gt; &lt;p&gt;I am not a legal scholar or historian, so I may have mistakes; feel free to mention them in the comments.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/United_States_Bill_of_Rights&quot;&gt;The Bill of Rights&lt;/a&gt; is the first ten amendments to the constitution, which guarantees a litany of rights including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Freedom of religion&lt;/li&gt; &lt;li&gt;Freedom of speech&lt;/li&gt; &lt;li&gt;Right to bear arms&lt;/li&gt; &lt;li&gt;And others&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;However, all of these limitations on governmental action only apply to the &lt;strong&gt;federal government&lt;/strong&gt; not &lt;strong&gt;state governments&lt;/strong&gt;. The framers largely trusted the state governments and were only skeptical of a tyrannical federal government for three reasons:&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;The idea of the thirteen former colonies operating as a single nation was still new. They volunteered to work together in the Revolutionary War and then in the Articles of Confederation, but still mostly operated as a loose confederation of states while the Constitution was being drafted.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;State governments were directly elected, while many parts of the federal government were indirectly elected or appointed (the Senate, the President, the Supreme Court, other federal courts, the cabinet, etc.).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The seat of federal power was distant given the modes of transportation available at the time, but the state capitol was usually only a few days away by horseback.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;In general, the state governments &lt;em&gt;were&lt;/em&gt; responsive to their people… as long as the “people” were white and male. Abolitionists in the North saw that the South couldn’t be trusted to be anything but tyrannical to the newly-freed slaves. The framers of the Fourteenth Amendment in 1868 set out to rectify what the framers of the Bill of Rights in 1789 overlooked: the Constitution would need to limit state governments in order to preserve civil liberties for all Americans.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;No State shall make or enforce any law which shall abridge the privileges or immunities of citizens of the United States;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;However, the effect of this clause all hinges on how one defines “privileges and immunities.” The framers intended to include the Bill of Rights and other rights, but they did not want to enumerate them lest the amendment be limited to &lt;em&gt;only&lt;/em&gt; the Bill of Rights. However, this plan backfired: in a 5-4 decision known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Slaughter-House_Cases&quot;&gt;&lt;em&gt;The Slaughter-House Cases (1873)&lt;/em&gt;&lt;/a&gt;, the Supreme Court interpreted “privilges and immunities” narrowly, not &lt;em&gt;even&lt;/em&gt; including the Bill of Rights! This single decision renders the whole clause nearly irrelevant, and it is rarely used today.&lt;/p&gt; &lt;p&gt;Yale Law Professor &lt;a href=&quot;https://en.wikipedia.org/wiki/Akhil_Amar&quot;&gt;Akhil Amar&lt;/a&gt; wrote “virtually no serious modern scholar–left, right, and center–thinks that &lt;em&gt;Slaughter-House&lt;/em&gt; is a plausible reading of the [Fourteenth] Amendment.” The Court usually gives deference to the intention of the framers, and in this case, the Congressional record itself holds their discussion that they intended the Amendment protect the Bill of Rights! Unfortunately, once the Court settles on something, it is extremely difficult to reverse, due to a doctrine known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Precedent#United_States_legal_system&quot;&gt;&lt;em&gt;stare decisis&lt;/em&gt;&lt;/a&gt;. Instead, legal advocates would turn to the Due Process Clause to provide the basic freedoms of the Bill of Rights for the newly-freed slaves.&lt;/p&gt; &lt;p&gt;However, there are some signs that almost a hundred-and-fifty years later, the court is willing to revisit this decision. Justice Clarence Thomas in &lt;em&gt;McDonald v. City of Chicago&lt;/em&gt; (which I will describe later), used the Privileges and Immunities Clause to arrive at his decision, indicating he may be willing to overrule &lt;em&gt;Slaughter-House&lt;/em&gt; in the future.&lt;/p&gt; &lt;h1 id=&quot;due-process-clause&quot;&gt;Due Process Clause&lt;/h1&gt; &lt;blockquote&gt; &lt;p&gt;nor shall any State deprive any person of life, liberty, or property, without due process of law;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/fourteenth/arthur-dent.jpg&quot; title=&quot;This is what happens when govenrments fail to give procedural due process. https://twitter.com/neilsorensen/status/882970032334098436&quot; style=&quot;width: 300px; float: right;&quot; /&gt; The most obvious application is to criminal proceedings, where alleged criminals are guaranteed a &lt;em&gt;legal procedure&lt;/em&gt; to defend themselves. But it also extends to things like eminent domain: if the &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy&quot;&gt;Vogons want to knock down Arthur Dent’s property to build an intergalactic hyperspace bypass&lt;/a&gt;, the Amendment would require that they notify Arthur Dent (and the other residents of earth) and provide a &lt;em&gt;legal procedure&lt;/em&gt; to fight the demolition. Leaving a note at Alpha Centauri doesn’t count.&lt;/p&gt; &lt;p&gt;Hence, this category of rights is called &lt;em&gt;procedural due process.&lt;/em&gt; What exact legal procedure depends on the circumstance. The Supreme Court has interpreted this to mean the person whose liberty the government wants to deprive needs to have a chance to defend themselves. For example, those accused of violating criminal laws can try to prove that they are innocent.&lt;/p&gt; &lt;p&gt;But what if a state made a law saying everyone whose first and last name starts with an ‘A’ needs to pay a fine to the government? Procedural due process wouldn’t help Aziz Ansari, because he is clealy guilty of having an A-name. In order to really have due process, the Court decided, the government needs to prove that the law is not an arbitrary limitation of freedom. This is caled “substantive due process,” because it protects people from the &lt;em&gt;substance&lt;/em&gt; law. In order to get the highest level of protection, “strict scrutiny,” from the Due Process Clause, plaintiffs have to show two things:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The government encroaches a right that is “deeply rooted in our nation’s history and traditions.”&lt;/li&gt; &lt;li&gt;That encroachment is not “narrowly tailored to serve a compelling state interest.”&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Judicial review, the practice of the judiciary striking down some law as unconstitutional, is not without controversy. It is inherently “anti-majoritarian:” a small group of appointed political elites can overturn the will of the people and their elected legislature. The point of judicial review is to check the power of popular will against narrowly and explicitly defined legal precepts; if 50.01% of people decide to oppress the other 49.99% for no reason, the courts should be able to prevent that. However, the courts are rightly reluctant to be in the position of overturning the popular will.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The considered views and opinions of even the most highly qualified scholars and experts seldom outweigh the determinations of the voters. When challenged, however, the voters’ determinations must find at least some support in evidence. –Judge Vaughn Walker in &lt;a href=&quot;https://en.wikipedia.org/wiki/Hollingsworth_v._Perry&quot;&gt;&lt;em&gt;Hollingsworth v. Perry (2010)&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;h2 id=&quot;incorporating-the-bill-of-rights-against-the-states&quot;&gt;Incorporating the Bill of Rights against the states&lt;/h2&gt; &lt;p&gt;Instead of the Privileges and Immunities Clause incorporating all of the Bill of Rights against the states, as the framers intended, the Supreme Court chose to incorporate individual pieces of the Bill of Rights against the states on a case-by-case basis. Overtime most–but not all–of the Bill of Rights has been incoprorated (for a list of each amendment and its incorporation status, see &lt;a href=&quot;https://en.wikipedia.org/wiki/Incorporation_of_the_Bill_of_Rights#Specific_amendments&quot;&gt;here&lt;/a&gt;). The most important for contemporary political descussion is &lt;a href=&quot;https://en.wikipedia.org/wiki/McDonald_v._City_of_Chicago&quot;&gt;&lt;em&gt;McDonald v. City of Chicago (2010)&lt;/em&gt;&lt;/a&gt; because it deals with gun rights.&lt;/p&gt; &lt;p&gt;Chicago had enacted expansive gun control: it &lt;em&gt;completely banned&lt;/em&gt; handguns (remember the Second Amendment does not apply to the states by itself). The plaintiff stated that his home had been broken into multiple times, so he needed a handgun to ensure his own liberty. Even the most pro-gun control must admit, owning a gun &lt;em&gt;is&lt;/em&gt; “deeply rooted in our nation’s history,” and a blanket ban is the antithesis of a “narrowly tailored” restriction, the Court reasoned as they struck down Chicago’s ordinance. The Court does permit &lt;em&gt;some&lt;/em&gt; regulation of guns, however.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Chicago can amend its gun laws to comply with this ruling while continuing to have strong, comprehensive and Constitutional gun laws, just as Washington D.C. has done [following &lt;a href=&quot;https://en.wikipedia.org/wiki/District_of_Columbia_v._Heller&quot;&gt;&lt;em&gt;District of Columbia v. Heller (2008)&lt;/em&gt;&lt;/a&gt;]. – Justice Samuel Alito in McDonald v. City of Chicago&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Even the Brady Campaign Against Gun Violence claimed victory following &lt;em&gt;McDonald&lt;/em&gt;, because the Court clarified what gun legislation was constitutional, and the things the Campaign advocates are explicitly permitted. To think this all started from an amendment made on behalf of the newly freed slaves…&lt;/p&gt; &lt;h1 id=&quot;equal-protection-clause&quot;&gt;Equal Protection Clause&lt;/h1&gt; &lt;blockquote&gt; &lt;p&gt;nor deny to any person within its jurisdiction the equal protection of the laws;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;The abolitionists expected that state governments would not start treating the newly-freed slaves equally overnight. Hence, they wrote the Equal Protection Clause. Given this, how could segregation have existed for so long in the South?&lt;/p&gt; &lt;p&gt;The Supreme Court again minimized the impact of the Fourteenth Amendment, to the point where the most egregious segregation was legal, in four major decisions:&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;The Supreme Court noted in &lt;a href=&quot;https://en.wikipedia.org/wiki/United_States_v._Cruikshank&quot;&gt;&lt;em&gt;U.S. v. Cruikshank (1876)&lt;/em&gt;&lt;/a&gt;, upheld in &lt;a href=&quot;https://en.wikipedia.org/wiki/Civil_Rights_Cases&quot;&gt;&lt;em&gt;Civil Rights Cases (1883)&lt;/em&gt;&lt;/a&gt;, that the Fourteenth Amendment only limits &lt;em&gt;state governments&lt;/em&gt; not &lt;em&gt;individuals&lt;/em&gt;; the relevant sentence of the Amendment begins “No &lt;strong&gt;state&lt;/strong&gt; shall…”&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Court ruled in &lt;a href=&quot;https://en.wikipedia.org/wiki/Breedlove_v._Suttles&quot;&gt;&lt;em&gt;Breedlove v. Suttles (1937)&lt;/em&gt;&lt;/a&gt; that since the rules for the poll tax were applied &lt;em&gt;uniformly&lt;/em&gt;, it is consistent with the Equal Protection Clause.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Court ruled in &lt;a href=&quot;https://en.wikisource.org/wiki/Lassiter_v._Northampton_County_Board_of_Elections/Opinion_of_the_Court&quot;&gt;&lt;em&gt;Lassiter v. Northampton County Board of Elections (1959)&lt;/em&gt;&lt;/a&gt; that a literacy test was consistent with Equal Protection Clause as long as it was not intended to descriminate on the basis of race.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Court, infamously, asserted in &lt;a href=&quot;https://en.wikipedia.org/wiki/Plessy_v._Ferguson&quot;&gt;&lt;em&gt;Plessy v. Furguson (1896)&lt;/em&gt;&lt;/a&gt; that “separate but equal” segregation is consistent with the Equal Protection Clause.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;For these reasons, the Amendment failed to live up to its goals. There were violations of even the watered-down Amendment: certainly some of the literacy tests were intended to descriminate on the basis of race, and certainly there were government-provided services which were separate but &lt;strong&gt;unequal&lt;/strong&gt;. But extra-legal factors prevented challenges to the system of segregation. I consider it the &lt;em&gt;greatest moral failing of the American justice system&lt;/em&gt; that even the limited guarantees of the Amendment were not provided to blacks in practice.&lt;/p&gt; &lt;p&gt;However, this was to be redeemed during the civil rights movement in the mid-twentieth century. Each of the legal defects would be completely reversed.&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;Lyndon Baines Johnson signed the &lt;a href=&quot;https://en.wikipedia.org/wiki/Civil_Rights_Act_of_1964&quot;&gt;The Civil Rights Act of 1964&lt;/a&gt;, justifying its authority to desegregate private industries because on the Commerce Clause (segregation affected interestate commerce) rather than the Fourteenth Amendment. This was upheld in the landmark &lt;a href=&quot;https://en.wikipedia.org/wiki/Heart_of_Atlanta_Motel_v._United_States&quot;&gt;&lt;em&gt;Heart of Atlanta Motel, Inc. v. United States (1964)&lt;/em&gt;&lt;/a&gt; and would lead to the reluctant disappearance of &lt;em&gt;de jure&lt;/em&gt; segregation even from the most Solid of the South.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Twenty-fourth_Amendment_to_the_United_States_Constitution&quot;&gt;Twenty-fourth Amendment (1964)&lt;/a&gt; made poll taxes unconstitutional for federal elections and &lt;a href=&quot;https://en.wikipedia.org/wiki/Harper_v._Virginia_State_Board_of_Elections&quot;&gt;&lt;em&gt;Harper v. Virginia State Board of Elections (1966)&lt;/em&gt;&lt;/a&gt; did so for state and local ones. As far as I can tell, the court in &lt;em&gt;Harper&lt;/em&gt; arrived at a different conclusion because it consisted of different justices than in &lt;em&gt;Breedlove&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;In &lt;a href=&quot;https://en.wikipedia.org/wiki/Katzenbach_v._Morgan&quot;&gt;&lt;em&gt;Katzenbach v. Morgan (1966)&lt;/em&gt;&lt;/a&gt;, the Court expanded a part of the Fourteenth Amendment I have not delineated here (the Enforcement Clause) which would permit the Civil Rights Act of 1964 to prohibit literacy tests.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The infamous “separate but equal” doctrine was struck down in &lt;a href=&quot;https://en.wikipedia.org/wiki/Brown_v._Board_of_Education&quot;&gt;&lt;em&gt;Brown v. Board of Education (1954)&lt;/em&gt;&lt;/a&gt;. I could write a whole essay just on the difference between in the Court’s reasoning in &lt;em&gt;Plessy&lt;/em&gt; and &lt;em&gt;Brown&lt;/em&gt;, but the briefest summary is: the plaintiffs successfully argued that “separate educational facilities are inherently unequal.”&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;It makes me imagine what would the country look like if the Fourteenth Amendment was interpreted and drafted as it intended. What if the Jim Crow Era never happened? In a few ways, American society still hasn’t made up the progress gained in the height of Reconstruction, although we have surpassed it in many ways, like private and public integration, voting rights, and prohibition of poll taxes. The occupying Northern Army took a stand against racial violence and had even eradicated the &lt;a href=&quot;https://en.wikipedia.org/wiki/Ku_Klux_Klan#First_Klan:_1865%E2%80%931871&quot;&gt;First KKK&lt;/a&gt; in 1871. Many states and districts &lt;em&gt;have yet&lt;/em&gt; to send a black person to congress since Reconstruction. When they have, there is usually only one.&lt;/p&gt; &lt;p&gt;And despite these recent legal victories, of course the fight against racism is not over. It has pivoted to social, cultural, and economic issues, rather than &lt;em&gt;de jure&lt;/em&gt; segregation.&lt;/p&gt; &lt;h2 id=&quot;sexual-equality-and-the-fourteenth-amendment&quot;&gt;Sexual Equality and the Fourteenth Amendment&lt;/h2&gt; &lt;p&gt;The Amendment never explicitly mentions sex discrimination, but it seems an obvious consideration for the Equal Protection Clause. Again, the courts would interpret the Amendment narrowly; It would take almost a century to ensure that sex discrimination is protected, and in some ways, the fight is still continuing today.&lt;/p&gt; &lt;p&gt;Susan B. Anthony wanted to argue that she was a citizen by birth and that the right to vote was a privilege of citizenship. Therefore, it should be extended to her by the Privileges and Immunities Clause (this was concurrent with &lt;em&gt;Slaughter-House&lt;/em&gt;). However, Anthony could not get even this far. The authorities considered it a &lt;em&gt;criminal violation&lt;/em&gt; rather than a &lt;em&gt;civil&lt;/em&gt; one, so &lt;a href=&quot;https://en.wikipedia.org/wiki/Trial_of_Susan_B._Anthony&quot;&gt;&lt;em&gt;United States v. Susan B. Anthony (1873)&lt;/em&gt;&lt;/a&gt; could not even come before the Supreme Court. Her jury of peers was all male; this paradoxically implies that men were both peers of Anthony &lt;em&gt;and&lt;/em&gt; they could vote when she couldn’t. To top it all off, the presiding judge, Justice Ward Hunt, actually &lt;em&gt;instructed the jury&lt;/em&gt; to find Anthony guilty. A contemporary observer would remark, “Miss Anthony had no trial by jury. She had only a trial by Judge Hunt.”&lt;/p&gt; &lt;p&gt;Even contemporary observers realized the &lt;em&gt;Anthony&lt;/em&gt; trial was political theatre. Suffragists tried again in &lt;a href=&quot;https://en.wikipedia.org/wiki/Minor_v._Happersett&quot;&gt;&lt;em&gt;Minor v. Happersett (1875)&lt;/em&gt;&lt;/a&gt;. The judge ruled that voting was not a privilege of citizenship. After all, some children and felons are certainly citizens but cannot vote. This case had a ripple effect in limit suffrage. It was cited in &lt;em&gt;Breedlove&lt;/em&gt; and &lt;em&gt;Lassiter&lt;/em&gt;. Women would need a constitutional amendment to claim the right to vote instead, which they got in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Nineteenth_Amendment_to_the_United_States_Constitution&quot;&gt;Nineteenth Amendment (1920)&lt;/a&gt;. Donald Trump symbollically vindicated Anthony with a pardon on the 100th anniversary of the Nineteenth Amendment’s ratification.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/fourteenth/ginsburg.jpg&quot; title=&quot;Ginsburg in 1977, before her tenurship on the Supreme Court.&quot; style=&quot;width: 300px; float: right;&quot; /&gt; In 1971, almost a hundred years after the first failed attempt to apply the Fourteenth Amendment to sexual equality by &lt;em&gt;Anthony&lt;/em&gt; and &lt;em&gt;Minor&lt;/em&gt;, the Supreme Court heard &lt;a href=&quot;https://en.wikipedia.org/wiki/Reed_v._Reed&quot;&gt;&lt;em&gt;Reed v. Reed (1971)&lt;/em&gt;&lt;/a&gt;. This time, however, the plaintiffs argued on the basis of the Equal Protection Clause, and the Court agreed. Coincidentally, future Supreme Court justice Ruth Bader Ginsburg filed an &lt;em&gt;amicus brief&lt;/em&gt; in &lt;em&gt;Reed&lt;/em&gt; on behalf of the ACLU’s Women’s Rights Project.&lt;/p&gt; &lt;p&gt;Sex is currently protected by the Equal Protection Clause with “intermediate scrutiny,” which is some progress, but many want to pass the Equal Rights Amendment which would would protect sex at the highest level, “strict scrutiny,” essentially making it easier to win cases based on sexual discrimination (see &lt;a href=&quot;https://eraeducationproject.com/doesnt-the-14th-amendment-already-guarantee-women-equal-rights-under-the-law/#learnmore&quot;&gt;ERA Education Project&lt;/a&gt;). However, requiring only males to register for the draft would not pass strict scrutiny, according to even legal scholars who favor the ERA (&lt;a href=&quot;https://repository.uchastings.edu/cgi/viewcontent.cgi?article=2205&amp;amp;context=hastings_law_journal&quot;&gt;Hastings Law Journal&lt;/a&gt;). This was the source of much opposition at the time the ERA was debated, since the feminist movement was linked with the anti-Vietnam War movement. Today, 76% of women support the ERA according to a &lt;a href=&quot;https://apnews.com/article/42b93fd7386089110543f4e1827ded67&quot;&gt;2020 AP poll&lt;/a&gt;, but only 38% of women agree with extending draft registration to women according to a &lt;a href=&quot;https://www.rasmussenreports.com/public_content/politics/general_politics/february_2016/most_women_oppose_having_to_register_for_the_draft&quot;&gt;2020 Rasmussen Report&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;To add yet another “however,” a male-only draft-registration might not even pass the currently-enforced intermediate scrutiny. We won’t know for sure until the courts decide appeals on &lt;a href=&quot;https://en.wikipedia.org/wiki/National_Coalition_for_Men_v._Selective_Service_System&quot;&gt;&lt;em&gt;National Coalition for Men v. Selective Service System (2019)&lt;/em&gt;&lt;/a&gt;. Feminist advocates such as the National Organization for Women Foundation are actually aligned with the National Coalition for Men, because such a ruling would strengthen the definition of intermediate scrutiny under the Equal Protection Clause.&lt;/p&gt; &lt;p&gt;In &lt;a href=&quot;https://en.wikipedia.org/wiki/Bostock_v._Clayton_County&quot;&gt;&lt;em&gt;Blostock v. Clayton County (2020)&lt;/em&gt;&lt;/a&gt;, the court would expand discrimination the definition of “sexual discrimination” to include discrimination based on sexual preference and sexual identity. Neil Gorsuch justifies the expansion as such:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;An employer who fired an individual for being homosexual or transgender fires that person for traits or actions it would not have questioned in members of a different sex. Sex plays a necessary and undisguisable role in the decision, exactly what Title VII forbids. Those who adopted the Civil Rights Act might not have anticipated their work would lead to this particular result. But the limits of the drafters’ imagination supply no reason to ignore the law’s demands. –Neil Gorsuch in the majority opinion of &lt;em&gt;Bostock&lt;/em&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;h1 id=&quot;the-fourteenth-amendment-today&quot;&gt;The Fourteenth Amendment Today&lt;/h1&gt; &lt;p&gt;The Amendment has implications for a host of policy issues today.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Marriage rights:&lt;/strong&gt; Extended to interracial couples and same-sex couples in &lt;a href=&quot;https://en.wikipedia.org/wiki/Loving_v._Virginia&quot;&gt;&lt;em&gt;Loving v. Virginia (1967)&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Obergefell_v._Hodges&quot;&gt;&lt;em&gt;Obergefell v. Hodges (2015)&lt;/em&gt;&lt;/a&gt; respectively on the basis of the Equal Protection Clause.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/fourteenth/whitehouse.jpg&quot; title=&quot;The Whitehouse after &amp;lt;i&amp;gt;Obergefell&amp;lt;/i&amp;gt;. https://en.wikipedia.org/wiki/Obergefell_v._Hodges#/media/File:Celebrating_a_new_America_-lovewins_58242_(18588276403).jpg&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Contraceptive and abortion rights:&lt;/strong&gt; Extended by &lt;a href=&quot;https://en.wikipedia.org/wiki/Griswold_v._Connecticut&quot;&gt;&lt;em&gt;Griswold v. Connecticut (1965)&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Roe_v._Wade&quot;&gt;&lt;em&gt;Roe v. Wade (1973)&lt;/em&gt;&lt;/a&gt;. The Court found an &lt;em&gt;implied right&lt;/em&gt; to privacy, protected by the Due Process Clause, that makes blanket bans on contraception and abortion unconstitutional (exact stipulations were modified in &lt;a href=&quot;https://en.wikipedia.org/wiki/Planned_Parenthood_v._Casey&quot;&gt;&lt;em&gt;Planned Parenthood v. Casey (1992)&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Challenges to affirmative action:&lt;/strong&gt; The Court found that affirmative action, in general was ok, but racial quotas were a violation of the Equal Protection Clause in&lt;a href=&quot;https://en.wikipedia.org/wiki/Regents_of_the_Univ._of_Cal._v._Bakke&quot;&gt;&lt;em&gt;Regents of the Univ. of Cal. v. Bakke (1978)&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Trump’s Presidential Advisory Commission on Election Integrity:&lt;/strong&gt; The commission wanted to compare voter rolls to a database of non-citizens. The NAACP claimed that this would have a large amount of false-positives, and that would disproportionately affect minorities in &lt;a href=&quot;https://www.naacpldf.org/files/about-us/EIC%20Complaint.pdf&quot;&gt;&lt;em&gt;NAACP Legal Defense and Education Fund v. Trump, Pence, and Kobach (2017)&lt;/em&gt;&lt;/a&gt;. The Commission was dismissed before the case went to court.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;The Presidential Election of 2000:&lt;/strong&gt; The Court held that Florida’s statewide recount did not enforce equal standards on each county, so it was a violation of the Equal Protection Clause in &lt;a href=&quot;https://en.wikipedia.org/wiki/Bush_v._Gore&quot;&gt;&lt;em&gt;Bush v. Gore (2000)&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/fourteenth/recount.jpg&quot; title=&quot;An employee of the Miami-Dade County elections department, left, shows a ballot to representatives of both Republican and Democratic parties during a manual recount of three Miami-Dade precincts, before the recount was stopped by the Supreme Court in &amp;lt;i&amp;gt;Bush&amp;lt;/i&amp;gt;. https://jacobinmag.com/2020/10/trump-coup-florida-2000-recount&quot; style=&quot;width: 500px;&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/fourteenth/texas-redistricting.png&quot; title=&quot;Comparison of U.S. House election results for Texas in 2002 and 2004 after the creation of new boundaries for congressional districts following mid-term redistricting in 2003. Blue denotes a Democratic hold, dark red denotes a Republican hold, and light red denotes a Republican pickup. https://en.wikipedia.org/wiki/2004_United_States_House_of_Representatives_elections_in_Texas#/media/File:Texas_redistricting_-_2002_and_2004.png&quot; style=&quot;width: 300px; float: right;&quot; /&gt; &lt;strong&gt;Gerrymandering:&lt;/strong&gt; The Court &lt;em&gt;almost&lt;/em&gt; outlawed gerrymandering in &lt;a href=&quot;https://en.wikipedia.org/wiki/Davis_v._Bandemer&quot;&gt;&lt;em&gt;Davis v. Bandemer (1986)&lt;/em&gt;&lt;/a&gt; under the Equal Protection Clause but later found that no metric for deciding if a district map was gerrymandered was suitable in &lt;a href=&quot;https://en.wikipedia.org/wiki/Vieth_v._Jubelirer&quot;&gt;&lt;em&gt;Vieth v. Jubelirer (2004)&lt;/em&gt;&lt;/a&gt;. Even so, gerrymandering along racial lines was prohibited &lt;a href=&quot;https://en.wikipedia.org/wiki/League_of_United_Latin_American_Citizens_v._Perry&quot;&gt;&lt;em&gt;League of United Latin-American Citizens v. Perry&lt;/em&gt;&lt;/a&gt;, if a map did not include enough majority-minority districts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Money bail:&lt;/strong&gt; There is an as-yet undecided case called &lt;a href=&quot;https://www.theusconstitution.org/litigation/odonnell-v-harris-county-texas-et-al/&quot;&gt;&lt;em&gt;O’Donnel v. Harris County&lt;/em&gt;&lt;/a&gt; which alleges that the bail system used in most of Houston, TX unfairly discriminates on the basis of wealth when more reasonable alternatives are available.&lt;/p&gt; &lt;h1 id=&quot;takeaways&quot;&gt;Takeaways&lt;/h1&gt; &lt;p&gt;In school, I had to memorize the preamble and was quizzed on the Bill of Rights. The preamble has little bearing on understanding how the government functions today, and the Fourteenth Amendment has had an arguably greater impact on my life than the Bill of Rights by itself. Investigation of it leads to several important lessons about liberty and our constitution:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The fight for the civil liberties for a specific group is fundamentally intertwined with the fight for freedom for everyone. The Fourteenth Amendment, designed to protect newly-freed slaves is what protects the right to bear arms, freedom from sexual discrimination, and countless others.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The fight for racial equality isn’t just the Civil War or &lt;em&gt;Brown v. Board&lt;/em&gt;. The fight for gender equality isn’t just The Nineteenth Amendment or The Civil Rights Act. These would adapt and persist across &lt;em&gt;multiple centuries&lt;/em&gt; in a patchwork-quilt of legislative, judicial, executive, social, and cultural battles. The struggle is by no means linear and by no means won. We are still fighting the descendants of the same fight today.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The American Constitution is a &lt;em&gt;living document&lt;/em&gt;. Most obviously, it has been changed the constitutional amendments like the Fourteenth, but, more subtly, the courts change it through case law. &lt;em&gt;Plessy&lt;/em&gt; and later &lt;em&gt;Brown&lt;/em&gt; fundamentally changed how we interpret the Equal Protection Clause. I was surprised to learn how many landmark cases were only decided recently (&lt;em&gt;McDonald (2010)&lt;/em&gt;, &lt;em&gt;Obergefell (2015)&lt;/em&gt;, &lt;em&gt;Blostock (2020)&lt;/em&gt;). I think the strength of the constitution is that it can be adapted to suit the novel challenges of modern society.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;</content><author><name>Samuel Grayson</name></author><category term="politics"/><summary type="html">This amendment lies at the heart of issues on the left and right: granting abortion rights, gay marriage, contraceptive rights, limiting gerrymandering, gun rights, limiting affirmative action, resolving the famous Presidential Election of 2000, and the status of women in the draft. Can you guess what it is?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samgrayson.me/assets/img/fourteenth/brown-v-board.jpg"/></entry><entry><title type="html">Monads as a Programming Pattern</title><link href="https://samgrayson.me/2019-08-06-monads-as-a-programming-pattern/" rel="alternate" type="text/html" title="Monads as a Programming Pattern"/><published>2019-08-06T00:00:00-05:00</published><updated>2019-08-06T00:00:00-05:00</updated><id>https://samgrayson.me/monads-as-a-programming-pattern</id><content type="html" xml:base="https://samgrayson.me/2019-08-06-monads-as-a-programming-pattern/">&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt; &lt;p&gt;This article is written from a programmer’s perspective, where a monad is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_design_pattern&quot;&gt;&lt;em&gt;software engineering pattern&lt;/em&gt;&lt;/a&gt;. Like other patterns, you may have already used it without knowing it was the monad pattern. There is still value in studying such patterns, because then you can use it more fluidly. There is a mathematical &lt;a href=&quot;https://ncatlab.org/nlab/show/monad&quot;&gt;category-theory definition&lt;/a&gt;, but you can use them effectively without understanding that (so don’t @ me, Brendan).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Imprecise definition:&lt;/strong&gt; A monad is a type that wraps an object of another type. There is no direct way to get that ‘inside’ object. Instead you ask the monad to act on it for you. Monadic classes are a lot like classes implementing the &lt;a href=&quot;https://en.wikipedia.org/wiki/Visitor_pattern&quot;&gt;visitor pattern&lt;/a&gt;, but monads are capable of returning something wrapped in another monad. This essential property makes functions on monads composable. I’ll get to a precise definition after you understand the imprecise one through some examples.&lt;/p&gt; &lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt; &lt;h3 id=&quot;maybenullableoptional-monad&quot;&gt;Maybe/Nullable/Optional monad&lt;/h3&gt; &lt;p&gt;Our first example is Maybe. I will write its interface in pseudocode resembling Java.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nothing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;As promised, the Maybe monad can contain another object, and we can ask it to act indirectly. Notice that apply doesn’t take a function from &lt;code class=&quot;highlighter-rouge&quot;&gt;T -&amp;gt; V&lt;/code&gt;, but rather from &lt;code class=&quot;highlighter-rouge&quot;&gt;T -&amp;gt; Maybe&amp;lt;V&amp;gt;&lt;/code&gt;. It unboxes the inside object, executes the function and returns the new box. This allows monads to be chained together.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Let's assume getInput asks the user for input,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// and returns Some(value) if the user enters a valid value.&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Otherwise it returns Nothing.&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedRatio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// maybeDivide returns a Maybe&amp;lt;int&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// because if the denominator is zero, it returns Nothing.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;maybeDivide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt; took &lt;code class=&quot;highlighter-rouge&quot;&gt;T -&amp;gt; V&lt;/code&gt;, this would evaluate to a &lt;code class=&quot;highlighter-rouge&quot;&gt;Maybe&amp;lt;Maybe&amp;lt;int&amp;gt;&amp;gt;&lt;/code&gt;, which quickly becomes unwieldy. Also note that a function &lt;code class=&quot;highlighter-rouge&quot;&gt;T -&amp;gt; V&lt;/code&gt; can still be used; just compose it with &lt;code class=&quot;highlighter-rouge&quot;&gt;Some&lt;/code&gt;:&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// let func: T -&amp;gt; V&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrapped&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// result is Maybe&amp;lt;V&amp;gt;, as desired&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;listcollection-monad&quot;&gt;List/Collection monad&lt;/h3&gt; &lt;p&gt;In the previous example, you might think a monad is just an interface for &lt;a href=&quot;https://en.wikipedia.org/wiki/Object_composition#Aggregation&quot;&gt;aggregating (in the OOP sense)&lt;/a&gt; another object, but here is a monad that is more general than that.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// makes collection containing one element&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeCollection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// runs func on every element and concatenates the results&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// runs func on every element&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// implemented by calling flatMap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makeCollection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Instead of calling the operator &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt;, I called it &lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt; as &lt;a href=&quot;https://stackoverflow.com/questions/26684562/whats-the-difference-between-map-and-flatmap-methods-in-java-8&quot;&gt;the name is well-known&lt;/a&gt;. Again, &lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt; is more general because it can implement &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;, but not the other way around (you’d need &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; &lt;strong&gt;and&lt;/strong&gt; something like Python’s &lt;a href=&quot;https://docs.python.org/3.7/library/itertools.html#itertools.chain.from_iterable&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;itertools.chain.from_iterables&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt; &lt;h3 id=&quot;promiseawaitable-monad&quot;&gt;Promise/Awaitable monad&lt;/h3&gt; &lt;p&gt;In the previous two examples, you may have wanted a method that exposes the wrapped value(s), maybe &lt;code class=&quot;highlighter-rouge&quot;&gt;getValues&lt;/code&gt;. The whole point of the monad pattern is to avoid that urge, and . It’s like &lt;a href=&quot;https://en.wikipedia.org/wiki/Information_hiding&quot;&gt;data-hiding (in the OOP sense)&lt;/a&gt;. Instead of accessing elements directly, you chain on your computations through &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;then&lt;/code&gt;. The Promise monad is an example where you physically can’t ask for the wrapped values, because it might not exist yet! &lt;a href=&quot;https://stackoverflow.com/q/45378267/1078199&quot;&gt;A common question&lt;/a&gt; is how to get the value &lt;em&gt;out&lt;/em&gt; of the promise for subsequent computation, but the answer is instead to put the subsequent computation &lt;em&gt;into&lt;/em&gt; the promise, using &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makePromise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this would be cleaner with Promise.all&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// but that would obfuscate the point I am trying to make here&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makePromise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Streams naturally arise as well; They are just promises that get &lt;code class=&quot;highlighter-rouge&quot;&gt;resolve&lt;/code&gt;d multiple times.&lt;/p&gt; &lt;h2 id=&quot;precise-definition&quot;&gt;Precise definition&lt;/h2&gt; &lt;p&gt;Borrowing heavily from &lt;a href=&quot;https://en.wikipedia.org/wiki/Monad_(functional_programming)#Definition&quot;&gt;Wikipedia&lt;/a&gt;, a monad is three things…&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A generic type &lt;code class=&quot;highlighter-rouge&quot;&gt;M&lt;/code&gt; .&lt;/li&gt; &lt;li&gt;A function, often called &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;of&lt;/code&gt; (&lt;a href=&quot;https://github.com/fantasyland/fantasy-land&quot;&gt;JS fantasy-land&lt;/a&gt;), or &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; (&lt;a href=&quot;https://downloads.haskell.org/~ghc/latest/docs/html/libraries/base-4.12.0.0/Control-Monad.html#v:return&quot;&gt;Haskell&lt;/a&gt;), with signature is &lt;code class=&quot;highlighter-rouge&quot;&gt;T -&amp;gt; M&amp;lt;T&amp;gt;&lt;/code&gt;. In my examples this is, &lt;code class=&quot;highlighter-rouge&quot;&gt;Maybe.Some&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;Collection.makeCollection&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise.makePromise&lt;/code&gt;. This convertor takes a regular value and wraps it in a monadic one.&lt;/li&gt; &lt;li&gt;A combinator, often called &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;chain&lt;/code&gt; (&lt;a href=&quot;https://github.com/fantasyland/fantasy-land&quot;&gt;JS fantasy-land&lt;/a&gt;) or spelled as an infix operator, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;=&lt;/code&gt; (&lt;a href=&quot;https://downloads.haskell.org/~ghc/latest/docs/html/libraries/base-4.12.0.0/Control-Monad.html#v:-62--62--61-&quot;&gt;Haskell&lt;/a&gt;), with signature &lt;code class=&quot;highlighter-rouge&quot;&gt;(M&amp;lt;T&amp;gt;, T -&amp;gt; M&amp;lt;V&amp;gt;) -&amp;gt; M&amp;lt;V&amp;gt;&lt;/code&gt;. In my examples this is, &lt;code class=&quot;highlighter-rouge&quot;&gt;Maybe.apply&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;Collection.flatMap&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise.then&lt;/code&gt;. This combinator unwraps the monad, does an operation, and returns the monad of the result.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;… that respects these three laws…&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wrap&lt;/code&gt; is the left-identity of &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap(a).bind((T x) -&amp;gt; f(x))&lt;/code&gt; evaluates to the same thing as &lt;code class=&quot;highlighter-rouge&quot;&gt;f(a)&lt;/code&gt;. This means that &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap&lt;/code&gt; really just packages its input into a container.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wrap&lt;/code&gt; is the right-identity of &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;monadicObj.bind((T x) -&amp;gt; wrap(x))&lt;/code&gt; evaluates to the same thing as &lt;code class=&quot;highlighter-rouge&quot;&gt;monadicObj&lt;/code&gt;. This means that &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt; really does unwrap the container properly, accessing the insides.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt; is associative:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;monadicObj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;evaluates to the same thing as&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;monadicObj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This last law is why people like Promises; they turn horizontally &lt;a href=&quot;https://medium.com/@justintulk/flattening-nested-promises-in-javascript-88f04793ded7&quot;&gt;nested callbacks into vertically chained callbacks&lt;/a&gt;, saving us from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Pyramid_of_doom_(programming)&quot;&gt;Pyramid of Doom&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://qr.ae/TWvqL3&quot;&gt; &lt;img src=&quot;/assets/img/monads-as-a-programming-pattern/pyramid_of_doom.png&quot; alt=&quot;pyramid of doom&quot; /&gt; &lt;/a&gt;&lt;/p&gt; &lt;p&gt;These laws let me write functions that will work with &lt;em&gt;any&lt;/em&gt; monad. For example, I mentioned implementing &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; on some specific monads. Now I’ll implement it for all monads that follow the monad-laws.&lt;/p&gt; &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// I'll assume that all monads in this language implement the interface Monad&amp;lt;T&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;category-theory&quot;&gt;Category Theory&lt;/h3&gt; &lt;p&gt;The concept of monads comes from &lt;a href=&quot;https://en.wikipedia.org/wiki/Monad_(category_theory)&quot;&gt;category theory&lt;/a&gt;. Their use in computer programming was first explicated rather recently, in 1989 (&lt;a href=&quot;https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.26.2787&quot;&gt;CiteSeerX 10.1.1.26.2787&lt;/a&gt;). The monad has friends which are also borrowed into programming: monoids, functors, and applicatives. Although the math is important and valuable I think the monad pattern can be used effectively without knowledge of category theory, just as a programmer can effectively use the &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda&lt;/code&gt;-functions without understanding &lt;a href=&quot;https://en.wikipedia.org/wiki/Lambda_calculus&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;λ&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\lambda&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.69444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;λ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-calculus&lt;/a&gt;. The concept from category theory is just inspiration. The laws I stated above are enough for program-correctness.&lt;/p&gt; &lt;p&gt;If a construct does not satisfy the monad laws, it technically isn’t a monad, but it might still be monad-inspired. In most JS libraries, &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt; can take &lt;code class=&quot;highlighter-rouge&quot;&gt;A -&amp;gt; Monad&amp;lt;B&amp;gt;&lt;/code&gt; AND &lt;code class=&quot;highlighter-rouge&quot;&gt;A -&amp;gt; B&lt;/code&gt; (not monad-compliant). This design choice breaks associativity for objects with a property named &lt;code class=&quot;highlighter-rouge&quot;&gt;then&lt;/code&gt; (&lt;a href=&quot;https://stackoverflow.com/a/45772042/1078199&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/50173415/1078199&quot;&gt;2&lt;/a&gt;). This is not necessarily wrong or bad. I personally find it a pragmatic decision that often simplifies code, even though it is less theoretically nice. &lt;a href=&quot;https://github.com/briancavalier/creed&quot;&gt;Some JS libraries&lt;/a&gt; do fit the mathematical monad bill. Even Haskell’s so-called &lt;code class=&quot;highlighter-rouge&quot;&gt;IO Monad&lt;/code&gt; &lt;a href=&quot;https://www.quora.com/How-would-you-explain-a-concept-of-monads-to-a-non-CS-person&quot;&gt;may not even be a proper category-theory monad&lt;/a&gt;.&lt;/p&gt; &lt;h2 id=&quot;syntax&quot;&gt;Syntax&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt; is so commonly used that Haskell has special syntax for it: &lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/do_notation&quot;&gt;do-notation&lt;/a&gt;. Python, JavaScript, and Rust have this &lt;a href=&quot;https://en.wikipedia.org/wiki/Syntactic_sugar&quot;&gt;syntactic sugar&lt;/a&gt; as well, but in disguise as I will show you shortly.&lt;/p&gt; &lt;h3 id=&quot;haskells-do-notation&quot;&gt;Haskell’s do-notation&lt;/h3&gt; &lt;div class=&quot;language-haskell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- remember `&amp;gt;&amp;gt;=` in Haskell means `.bind` in Java,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- and `\x -&amp;gt;` is the start of a lambda, like `((T x) -&amp;gt;` in Java.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monadicObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;varName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doStuff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;varName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;is &lt;a href=&quot;https://en.wikipedia.org/wiki/Semantics_(computer_science)&quot;&gt;semantically equivalent&lt;/a&gt; to&lt;/p&gt; &lt;div class=&quot;language-haskell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monadicObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doStuff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;varName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;So a program that gets to integers written using the vanilla syntax looks like this:&lt;/p&gt; &lt;div class=&quot;language-haskell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- x and y are just regular ints (remember the signature of &amp;gt;&amp;gt;= (AKA bind)).&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- We have to return a monad&amp;lt;int&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- (remember the signature of bind)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Remember that `return` is not a keyword in Haskell; just a regular function&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- It refers to the function that wraps a regular value in a monad.&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And this is the semantically equivalent using do-notation:&lt;/p&gt; &lt;div class=&quot;language-haskell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Everything after here goes after: getInput &amp;gt;&amp;gt;= \x -&amp;gt; ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Everything after here goes after: getInput &amp;gt;&amp;gt;= \y -&amp;gt; ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- x and y are just regular ints, not wrapped ints.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;It is a weird transformation, but you can see its utility: we can—to some extent—forget that &lt;code class=&quot;highlighter-rouge&quot;&gt;getLine&lt;/code&gt; returns wrapped values; &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; is just a regular &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;. This makes writing monadic code as natural as operating on regular values.&lt;/p&gt; &lt;h3 id=&quot;state&quot;&gt;State&lt;/h3&gt; &lt;p&gt;Note that &lt;code class=&quot;highlighter-rouge&quot;&gt;getInput&lt;/code&gt; is a pure function: it takes a function of type &lt;code class=&quot;highlighter-rouge&quot;&gt;Int -&amp;gt; Void&lt;/code&gt; and calls it with an argument and returns &lt;code class=&quot;highlighter-rouge&quot;&gt;void&lt;/code&gt;. Although the returned value is always the same (&lt;code class=&quot;highlighter-rouge&quot;&gt;void&lt;/code&gt;), the argument it passes could be different in subsequent calls. This is how we can model what would otherwise be a non-deterministic function in a pure-functional way. Pure functional programming languages represent &lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/Understanding_monads/IO#The_universe_as_part_of_our_program&quot;&gt;the whole outside world&lt;/a&gt; as a monadic context. Programs just bind computation onto this context.&lt;/p&gt; &lt;h3 id=&quot;control-flow&quot;&gt;Control-flow&lt;/h3&gt; &lt;p&gt;Monads are often called &lt;a href=&quot;http://www.thisurlisfalse.com/programmable-semicolon-monads-in-haskell/&quot;&gt;programmable semicolons&lt;/a&gt;, because the monad’s &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt; controls the subsequent computation.&lt;/p&gt; &lt;div class=&quot;language-haskell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;squares&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- the List monad controls the code at this point&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- in fact, it runs once for each element in the list.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This allows for complex control-flow operations (such as coroutines) to be implemented at the user-level in a monad instead of the language-level. Languages without do-notation have to bend over backwards to emulate it in specific cases, as we will see.&lt;/p&gt; &lt;h3 id=&quot;cpythonjavascript-await-keyword&quot;&gt;C#/Python/JavaScript await keyword&lt;/h3&gt; &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt; keyword in other languages emulates do-notation for Promise monads. Consider JavaScript’s &lt;a href=&quot;https://javascript.info/async-await&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt;&lt;/a&gt;; It makes everything after the &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt; the body of a function that is inputted to &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makePromise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;is equivalent to:&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt; in Python and other languages does this too—but it is less apparent because callback-based promises are less prominent in those language communities. What do-notation does for all monads, &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt; does for &lt;code class=&quot;highlighter-rouge&quot;&gt;async&lt;/code&gt; monads: it makes writing asynchronous code almost as natural as writing synchronous code.&lt;/p&gt; &lt;h3 id=&quot;rust-question-mark-operator&quot;&gt;Rust question-mark operator&lt;/h3&gt; &lt;p&gt;Rust does &lt;a href=&quot;https://doc.rust-lang.org/book/ch09-00-error-handling.html&quot;&gt;not have exceptions&lt;/a&gt; (!), so you might think error-handling would be painful; you would have to anticipate failure at every possible failure point.&lt;/p&gt; &lt;p&gt;Rust has a &lt;a href=&quot;https://m4rw3r.github.io/rust-questionmark-operator&quot;&gt;question-mark operator&lt;/a&gt; which emulates do-notation for their &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt; monad (which is also known as &lt;code class=&quot;highlighter-rouge&quot;&gt;Nullable&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Maybe&lt;/code&gt; in other languages). The question-mark operator makes the lack of exceptions palatable. It lets us call functions which might not succeed with impunity.&lt;/p&gt; &lt;p&gt;We must explicitly handle every error:&lt;/p&gt; &lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;trySuspiciousOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Maybe you don't know Rust.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Just know that this is called &quot;pattern matching on a tagged union.&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// It asks if wrappedA looks like Some(_) or Nothing.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedA&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;trySuspiciousOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedB&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Nothing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Nothing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;However, we can rewrite the code like this:&lt;/p&gt; &lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;trySuspiciousOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;trySuspiciousOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Even this code is non-idiomatic; do not emulate&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;As you can see, these language features are just special cases of the more general do-notation. There is &lt;a href=&quot;https://varkor.github.io/blog/2018/11/10/monadic-do-notation-in-rust-part-i.html&quot;&gt;a proposal to incorporate do-notation into Rust&lt;/a&gt;. Since Rust has a different semantic model than Haskell, there are devils in multiple details of the proposal.&lt;/p&gt; &lt;h2 id=&quot;looking-forward&quot;&gt;Looking forward&lt;/h2&gt; &lt;p&gt;Here are some ways of thinking about monads. There are other ways to think about monads; I just picked three that make sense to me and seem exhaustive.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Sometimes the monad acts like a container of another type, as in the Collection monad. This is why some people emphatically exclaim eureka’s like “a monad is just like &lt;a href=&quot;https://blog.plover.com/prog/burritos.html&quot;&gt;a burrito&lt;/a&gt;”, “&lt;a href=&quot;http://telofy.soup.io/post/23797479/Think-of-a-monad-as-a-spacesuit&quot;&gt;a spacesuit&lt;/a&gt;”, or “&lt;a href=&quot;https://www.reddit.com/r/haskell/comments/1bymg1/monads_are_burritos_in_spacesuits_full_of_nuclear/&quot;&gt;a burrito in a spacesuit&lt;/a&gt;.” These people miss that it can be anything else; in many use-cases the monad can’t simply ‘contain’ it. While the authors might understand this, a novice reader likely won’t.&lt;/li&gt; &lt;li&gt;In these non-containing use-cases, the monad can act like a potential for there being a value, kind of like a Promise. Often monads in this case have the same semantics as “&lt;a href=&quot;https://en.wikipedia.org/wiki/Continuation-passing_style&quot;&gt;continuations&lt;/a&gt;” or callbacks: I don’t have the value, but I can have the guy who does call (haha) you.&lt;/li&gt; &lt;li&gt;Sometimes a monad can act like the context for data. This last case is used in functional programming languages to isolate impure side-effects of functions. &lt;code class=&quot;highlighter-rouge&quot;&gt;getLine&lt;/code&gt; in Haskell returns a &lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt; in an &lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/Understanding_monads/IO&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IO&lt;/code&gt;&lt;/a&gt; monad. Perhaps you would have a Thread monad, that represents thread-local data (the thread is context for the data). You can’t operate on the data because it is not in your thread, but you can ask the other thread to operate on it for you. I chose not to elaborate examples of this use-case because it is less applicable outside of ML-family languages.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Now you know the pattern. It is useful to recognize in the wild, and it is a good tool in the box.&lt;/p&gt; &lt;h3 id=&quot;maybe-this-explanation-is-bad&quot;&gt;Maybe this explanation is bad&lt;/h3&gt; &lt;p&gt;It seems everyone who learns about monads goes through &lt;a href=&quot;https://stackoverflow.com/a/19551168/1078199&quot;&gt;this cycle&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;ol&gt; &lt;li&gt;person X doesn’t understand monads&lt;/li&gt; &lt;li&gt;person X works long and hard, and groks monads&lt;/li&gt; &lt;li&gt;person X experiences amazing feeling of enlightenment, wonders why others are not similarly enlightened&lt;/li&gt; &lt;li&gt;person X gives horrible, incomplete, inaccurate, oversimplified, and confusing explanation of monads to others which probably makes them think that monads are stupid, dumb, worthless, overcomplicated, unnecessary, something incorrect, or a mental wank-ercise&lt;/li&gt; &lt;/ol&gt; &lt;/blockquote&gt; &lt;p&gt;It happens so much, there are names for it: some call it &lt;a href=&quot;https://www.youtube.com/watch?v=dkZFtimgAcM&quot;&gt;The Curse of the Monad&lt;/a&gt;, others &lt;a href=&quot;https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/&quot;&gt;The Monad Tutorial Fallacy&lt;/a&gt;. There is even the meme “monads are just monoids on the category of endofunctors; What part of that don’t you understand?”&lt;/p&gt; &lt;p&gt;It took me three tries over the past five years to understand monads. Of all the presentations I had read,&lt;/p&gt; &lt;ol&gt; &lt;li&gt;None made it feel like an abstraction of a programming pattern.&lt;/li&gt; &lt;li&gt;None pointed out how I was already using monadic-inspired constructs in my code.&lt;/li&gt; &lt;li&gt;None pointed out the connection with &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The first point was a pragmatic choice to emphasize the utility of a monad, and the latter two are ways of connecting it to things the reader probably already understands. I acknowledge that this article probably won’t help most people because I might not be good at explaining how I learned this thing, and there is a large possibility that I don’t have the same learning style as you. However, I do hope the act of reading it inspires an original thought in at least a few readers or even one; That will make all this worthwhile.&lt;/p&gt; &lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html&quot;&gt;You Could Have Invented Monads! (And Maybe You Already Have.)&lt;/a&gt; This is the best tutorial I have read through for its brevity and the challenges it gives the reader.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://wiki.haskell.org/Monad_tutorials_timeline&quot;&gt;Monad tutorials timeline&lt;/a&gt; This is a somewhat opinionated list of many blogposts like this one. Given the variety of pedagogical choices, there is likely one that is suited to your learning style.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/Category_theory&quot;&gt;Wikibooks Haskell/Category Theory&lt;/a&gt; This is more technical, delving into the actual category theory. &lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/Applicative_functors#A_sliding_scale_of_power&quot;&gt;A different chapter&lt;/a&gt; draws a progression from functors to applicatives to monads. The series is great if you want a deeper dive.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/&quot;&gt;Category Theory for Programmers&lt;/a&gt; I’ve only the first half, but this seems like the most complete way to learn this while keeping ones sanity (as opposed to reading a math book on category theory).&lt;/li&gt; &lt;/ul&gt;</content><author><name>Samuel Grayson</name></author><category term="programming"/><summary type="html">This article is written from a programmer's perspective, where a monad is a software engineering pattern. It's just another tool for your box.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samgrayson.me/assets/img/monads-as-a-programming-pattern/toolbox.png"/></entry><entry><title type="html">Creative Thinking in Math Class</title><link href="https://samgrayson.me/2017-05-20-creative-thinking-in-math-class/" rel="alternate" type="text/html" title="Creative Thinking in Math Class"/><published>2017-05-20T00:00:00-05:00</published><updated>2017-05-20T00:00:00-05:00</updated><id>https://samgrayson.me/creative-thinking-in-math-class</id><content type="html" xml:base="https://samgrayson.me/2017-05-20-creative-thinking-in-math-class/">&lt;p&gt;Most students will say math class is stupid and boring. As a math person myself, I have to say: they’re right! Math taught in school is twelve years of Pavlovian training to associate math with arbitrariness and fear. Not only does this rob the student of a potentially enjoyable experience, it robs the student of the transferable skills that are exercised in math. I will give two examples.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/creative-thinking-in-math-class/rick_on_school.png&quot; alt=&quot;Rick Sanchez on scohol&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;transferable-skill-problem-solving&quot;&gt;Transferable Skill: Problem-Solving&lt;/h2&gt; &lt;p&gt;Asking novel kinds of questions teaches students how to solve problems they haven’t explicitly learned how to solve. In any job position, you will be asked to do this. Some students are afraid to trust their own original thoughts. Explicit practice with feedback can help them eventually use their own intelligence when making choices. I don’t think &lt;em&gt;only&lt;/em&gt; asking novel questions to students is necessarily a good idea, but I think we to ask more than none.&lt;/p&gt; &lt;p&gt;Here is a problem that requires original thinking to solve the first time.&lt;/p&gt; &lt;p&gt;This is a checkerboard with dominoes where each domino takes up two squares.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/creative-thinking-in-math-class/checkerboard_seutp_with_dominoes.png&quot; alt=&quot;checkerboard setup with dominoes&quot; /&gt;&lt;/p&gt; &lt;p&gt;It can be tiled with dominoes without any overlap or dominoes hanging off of the edge.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/creative-thinking-in-math-class/checkerboard_tiled_with_dominoes.png&quot; alt=&quot;checkboard tiled with dominoes&quot; /&gt;&lt;/p&gt; &lt;p&gt;If I cut off the two opposite red corners, can I still tile the board?&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/img/creative-thinking-in-math-class/checkerboard_with_corners_cut_off.png&quot; alt=&quot;checkerboard with corners cut off&quot; /&gt;&lt;/p&gt; &lt;p&gt;You may identify one tiling pattern that does not work, but can you convince me that &lt;em&gt;no&lt;/em&gt; tiling pattern will work?&lt;/p&gt; &lt;p&gt;This is a tough question, but in cases like this, a teacher can ask leading questions that guide the student to an answer for the difficult question. For example, the teacher could ask,&lt;/p&gt; &lt;ol&gt; &lt;li&gt;How many squares are there on the original board? &lt;br /&gt;&lt;span class=&quot;spoiler&quot;&gt;&lt;span&gt; Since the board is 8x8, there were 64 squares before the two corner tiles were removed. &lt;/span&gt;&lt;button&gt;&lt;/button&gt;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;After the corners are removed, how many of those that remain are black? How many are red? &lt;br /&gt;&lt;span class=&quot;spoiler&quot;&gt;&lt;span&gt; Out of the original 64, there must be 32 red and 32 black, but I cut off two red squares. Therefore there are 30 red and 32 black. &lt;/span&gt;&lt;button&gt;&lt;/button&gt;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;Can I place a domino such that it covers only two black squares? &lt;br /&gt;&lt;span class=&quot;spoiler&quot;&gt;&lt;span&gt; No. Each domino must cover one red and one black, no matter how it is placed. &lt;/span&gt;&lt;button&gt;&lt;/button&gt;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;Back to the original question, can all of the red tiles and all of the black tiles be covered by dominoes? &lt;br /&gt;&lt;span class=&quot;spoiler&quot;&gt;&lt;span&gt; No, because the are 32 black tiles, 30 red tiles, and each domino must cover one of both. No matter how you do it, you will end up with 2 uncovered black tiles. &lt;br /&gt; &lt;img alt=&quot;checkboard not tiled with dominoes&quot; src=&quot;/assets/img/creative-thinking-in-math-class/checkerboard_not_tiled_with_dominoes.png&quot; /&gt; &lt;/span&gt;&lt;button&gt;&lt;/button&gt;&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Paradoxically, the teacher helped the student by asking more questions. Students do not even need a grasp of math before they can begin answering novel questions like this one.&lt;/p&gt; &lt;p&gt;This style of thinking is valuable without a mentor as well. Students should learn that even though they can’t answer the big question, they can still make up other small questions (using some of their own ingenuity) which they can answer. Perhaps math units should start with guiding questions, and then slowly allow the student to make up their own questions. Currently, there is absolutely no incentive for students to think of their own questions about the concepts they are learning.&lt;/p&gt; &lt;h2 id=&quot;transferable-skill-communication-explaining-and-persuading&quot;&gt;Transferable Skill: Communication: Explaining and Persuading&lt;/h2&gt; &lt;p&gt;The method of teaching used above is called the “Socratic method.” Socrates famously &lt;a href=&quot;https://en.wikipedia.org/wiki/Meno#Dialogue_with_Meno.27s_slave&quot;&gt;explained mathematics to an uneducated servant&lt;/a&gt;. Explaining complicated things in simple terms is an art. There is not necessarily a ‘right’ way of explaining something, but some ways are better than others.&lt;/p&gt; &lt;p&gt;Currently math curriculum does not even attempt to challenge students’ ability to explain and persuade. Students go on to their future studies and jobs lacking the ability to explain something technical to people who don’t already understand it and to convince people of something they don’t already believe. These are both skills that could be exercised in the context of math.&lt;/p&gt; &lt;p&gt;Here is an example. When I was in middle school, I was arguing with my friends about whether &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;0.999&lt;/mn&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;0.999\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (repeating forever) was equal to 1. I thought it was not the same as 1, but a hair less than 1. My friend Ben was just as adamant that &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;0.999&lt;/mn&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;0.999\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; exactly equal to 1. His explanation was short, but persuasive.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;He asked us if we believed &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0.333&lt;/mn&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\frac 1 3 = 0.333\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.190108em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.845108em;&quot;&gt;&lt;span style=&quot;top:-2.6550000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; exactly, no approximation (if you could expand the ellipsis infinitely). We of course agreed.&lt;/li&gt; &lt;li&gt;Then he asked us if &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;1 = 3 \times \frac 1 3&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.72777em;vertical-align:-0.08333em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.190108em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.845108em;&quot;&gt;&lt;span style=&quot;top:-2.6550000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; exactly. Nothing special here either.&lt;/li&gt; &lt;li&gt;Then he said that &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mn&gt;0.333&lt;/mn&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;1 = 3 \times \frac 1 3 = 3 \times 0.333\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.72777em;vertical-align:-0.08333em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.190108em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.845108em;&quot;&gt;&lt;span style=&quot;top:-2.6550000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.72777em;vertical-align:-0.08333em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; exactly. “Ok?” we nodded.&lt;/li&gt; &lt;li&gt;When multiplying decimal digits, you multiply each digit by the multiplier, so &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mn&gt;0.333&lt;/mn&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0.999&lt;/mn&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;3 \times 0.333\ldots = 0.999\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.72777em;vertical-align:-0.08333em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; exactly. We learned that years ago and used it recently.&lt;/li&gt; &lt;li&gt;Hence &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mn&gt;0.333&lt;/mn&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0.999&lt;/mn&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;1 = 3 \times \frac 1 3 = 3 \times 0.333\ldots = 0.999\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.72777em;vertical-align:-0.08333em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.190108em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.845108em;&quot;&gt;&lt;span style=&quot;top:-2.6550000000000002em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.72777em;vertical-align:-0.08333em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; exactly. It’s just another way of writing the same thing.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;em&gt;Aside: &lt;a href=&quot;https://www.youtube.com/watch?v=TINfzxSnnIE&quot;&gt;Here&lt;/a&gt; is an entertaining presentation of this and similar arguments.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;We were reluctant that there was more than one way of writing a number in decimals—namely 1 and &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;0.999&lt;/mn&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;0.999\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;—but logic has no such hesitation. Once you go looking, you can find more examples of numbers with multiple decimal names: 0 is 0 or -0, 4 is 4.00 or 4.0.&lt;/p&gt; &lt;p&gt;If you are still not convinced, you have to reject one of the individual steps, but each step is exceedingly reasonable—even obvious—in isolation. That’s what makes this argument so cogent. At each step, he thought from our perspective: “what facts does my audience already believe and how can I use &lt;em&gt;those&lt;/em&gt;?”&lt;/p&gt; &lt;p&gt;Although he knew more math and jargon than us, he deliberately did not use it because he wanted us to understand it. People with an overinflated ego argue or ‘explain’ using complicated topics that “you wouldn’t understand”; people of true intelligence argue or explain something complicated &lt;a href=&quot;https://www.explainxkcd.com/wiki/index.php/Thing_Explainer&quot;&gt;using simple terms&lt;/a&gt;, &lt;a href=&quot;https://kottke.org/17/06/if-you-cant-explain-something-in-simple-terms-you-dont-understand-it&quot;&gt;see Richard Feynman&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Perhaps randomly assigned groups of students could present each concept to the rest of the class. They would have to prepare a lesson and field whatever questions or confusions the rest of the class had. &lt;em&gt;Aside: one of my classes did this. It was illuminating to see the differences in how other people understood and learned the concepts. Talking out competing viewpoints exposed a lot of misconceptions, sometimes even in the student-teachers. Without that experience, those misconceptions &lt;a href=&quot;http://www.ascd.org/publications/books/115011/chapters/Why-Check-for-Understanding%C2%A2.aspx&quot;&gt;might never have been noticed and corrected&lt;/a&gt;. What’s more, in these discussions, it was explained exactly why the misconceptions are wrong, and not just “because it is” or, worse, “because the teacher said so.”&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Perhaps classes should also incorporate proof-writing into their class. Most math competitions (like &lt;a href=&quot;https://artofproblemsolving.com/wiki/index.php/United_States_of_America_Mathematical_Olympiad&quot;&gt;USAMO&lt;/a&gt; and &lt;a href=&quot;https://www.maa.org/math-competitions/putnam-competition&quot;&gt;Putnam&lt;/a&gt;) do this and have efficient infrastructure for grading. Students should be graded on mathematical correctness and “elegance.” I understand that it would take more teacher-effort to grade these essay-like responses, but I hope you see why I think that’s a good trade. While elegance can be subjective, it is not more so than grading essays in English class. I think the skill of explaining is inherently subjectively evaluated in any form, but by no means should that complaint excuse us from practicing a vital skill.&lt;/p&gt; &lt;h2 id=&quot;making-things-better&quot;&gt;Making Things Better&lt;/h2&gt; &lt;p&gt;I don’t know exactly how to incorporate these ideas. Surely there is some value and wisdom in the traditional system; everyone needs to learn fractions. I am merely pointing out that maybe we need some traditional rote-learning mixed with novel problem-solving and communication, which are currently absent completely. In English class, where there is time allocated to appreciate the great masters and to express your own ideas creatively. I think math can be studied more like English If not for the sheer beauty of mathematics or blissful joy of creativity, then for the pragmatism of transferable skills students could gain in the process.&lt;/p&gt; &lt;p&gt;Twelve years of seemingly ceaseless mental drudgery extinguish any remaining ember of mathematical creativity, curiosity, or inspiration from students (see the wonderful &lt;a href=&quot;https://www.maa.org/sites/default/files/pdf/devlin/LockhartsLament.pdf&quot;&gt;A Mathematicians Lament by Paul Lockhart&lt;/a&gt; for more in this vein). It’s no wonder most students hate math; I couldn’t do a better job of making people hate it if I tried! It’s also no wonder that sometimes people at their job act like mindless drones with no ability to improvise or innovate in a self-motivated way.&lt;/p&gt; &lt;p&gt;I won’t pretend I am the first person on earth to notice this (see &lt;a href=&quot;https://www.nytimes.com/2019/05/11/opinion/sunday/math-teaching-football.html?module=inline&quot;&gt;Math Teachers Should Be More Like Football Coaches&lt;/a&gt;). These ideas are already implemented in some institutions. I was lucky enough to have dedicated teachers who went above and beyond what was required to implement these ideas. They also believed in me, and I am grateful for that. I hope to follow their example with my own spin on things too.&lt;/p&gt; &lt;h2 id=&quot;math-is-art&quot;&gt;Math is Art&lt;/h2&gt; &lt;p&gt;From the Mayans to the Greeks, from Babylon to the Indus River, every civilization has developed the disciplines of music, painting, and &lt;em&gt;math&lt;/em&gt;. It satisfies some basic human desire to explore the unknown, express ideas, and awe at sheer beauty. Sometimes it happens to be useful, but its purpose is &lt;a href=&quot;https://en.wikipedia.org/wiki/A_Mathematician%27s_Apology&quot;&gt;to be beautiful&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;That’s what math actually is to those who practice it. You get to make crazy up hypotheticals (e.g. “what if we had numbers whose squares are negative?”) and investigate them to their logical conclusion (e.g. complex analysis). There are many more of these: “are all infinities equal?” gives cardinal and ordinal numbers, “could a computer program prove everything?” gives computability theory and the incompleteness theorem.&lt;/p&gt; &lt;p&gt;I have found many practical reasons to teach math differently, but this is the one that resonates with me the most: math is a creative pursuit, and keeping this a secret among math people prevents a lot of people from experiencing the sublime, stupid-giddy, joy of being creative in this way.&lt;/p&gt; &lt;p&gt;&lt;em&gt;I gave a &lt;a href=&quot;https://youtu.be/IQqb8HfN5hw&quot;&gt;TEDx talk&lt;/a&gt; on this topic earlier. I have written and revised the same ideas in essay form.&lt;/em&gt;&lt;/p&gt;</content><author><name>Samuel Grayson</name></author><category term="math"/><category term="pedagogy"/><summary type="html">Most students will say math class is stupid and boring. As a math person myself, I have to say: they're right!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samgrayson.me/assets/img/creative-thinking-in-math-class/rick_on_school.png"/></entry><entry><title type="html">The Chaos of History (part 2)</title><link href="https://samgrayson.me/2017-01-09-chaos-of-history-2/" rel="alternate" type="text/html" title="The Chaos of History (part 2)"/><published>2017-01-09T00:00:00-06:00</published><updated>2017-01-09T00:00:00-06:00</updated><id>https://samgrayson.me/chaos-of-history-2</id><content type="html" xml:base="https://samgrayson.me/2017-01-09-chaos-of-history-2/">&lt;p&gt;In a &lt;a href=&quot;/2016-07-21-chaos-of-history-1/&quot;&gt;previous post&lt;/a&gt;, I talked about how a few random events can greatly change history. In this post, I will describe that idea more mathematically.&lt;/p&gt; &lt;h2 id=&quot;a-thought-experiment&quot;&gt;A Thought Experiment&lt;/h2&gt; &lt;p&gt;Let’s say I throw a rock straight up into the air and measure how far away it falls 10000 times. &lt;em&gt;I have too much free time.&lt;/em&gt; I can plot that distance against the number of falls. You would expect most of them to fall very close to where I threw the rock. You would expect far-away falls to be pretty rare.&lt;/p&gt; &lt;p&gt;We might suggest that this fits a Gaussian distribution (that’s what most people associate bell-curve). Most physical phenomena roughly follow a Gaussian distribution. Towards the far right, the probability is very small. It should be rare that I would toss a rock straight up in the air and see it land 20 meters away. The far left and far right are called the ‘tails’ of the distribution.&lt;/p&gt; &lt;p&gt;&lt;img alt=&quot;Gaussian distribution&quot; src=&quot;/assets/img/chaos-of-history-2/gaussian_distribution.png&quot; style=&quot;margins: auto;&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;haphazard-stroll&quot;&gt;Haphazard Stroll&lt;/h2&gt; &lt;p&gt;Now let’s say I throw the rock in the air, but this time I walk to where it landed and throw the rock in the air again from that point. This is called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Random_walk&quot;&gt;random walk&lt;/a&gt;, and here is what it looks like when the rock falls based on a Gaussian distribution. For good measure, I will run 5 random walks starting from different spots in different colors.&lt;/p&gt; &lt;p&gt;&lt;img alt=&quot;Gaussian random walk&quot; src=&quot;/assets/img/chaos-of-history-2/gaussian_random_walk.png&quot; style=&quot;margins: auto;&quot; /&gt;&lt;/p&gt; &lt;p&gt;But I want to talk about another distribution: the Cauchy distribution. It is very similar to the Gaussian distribution, but it is ever-so-slightly higher at the tails (hence it is called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Fat-tailed_distribution&quot;&gt;fat-tailed distribution&lt;/a&gt;). This means that extreme outcomes are still rare, but slightly less rare. People often too quick to assume that a bell-curve shaped distributions are Gaussian, as &lt;a href=&quot;http://rocketscienceofwallstreet.blogspot.com/2012/04/nassim-nicholas-taleb-against-gaussian.html&quot;&gt;some would argue&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;img alt=&quot;Gaussian and Cauchy distribution&quot; src=&quot;/assets/img/chaos-of-history-2/gaussian_and_cauchy.png&quot; style=&quot;margins: auto;&quot; /&gt;&lt;/p&gt; &lt;p&gt;But the difference seems small. Let’s see how these distributions differ in a real experiment. I’ll take a random walk using the Cauchy distribution and look at the differences&lt;/p&gt; &lt;p&gt;&lt;img alt=&quot;Cauchy random walk&quot; src=&quot;/assets/img/chaos-of-history-2/cauchy_random_walk.png&quot; style=&quot;margins: auto;&quot; /&gt;&lt;/p&gt; &lt;p&gt;In the Gaussian random walk, no single rock-throw really moved us far from the origin. None of the throw were really ‘out there’. In each Cauchy random walk, most of the throws didn’t affect the outcome that much, but there were one or two really impactful throws that did most of the moving (especially in the blue and green random walk). Outliers are still rare, but when they do occur, they are &lt;strong&gt;hugely influential&lt;/strong&gt;.&lt;/p&gt; &lt;h2 id=&quot;the-historical-analogy&quot;&gt;The Historical Analogy&lt;/h2&gt; &lt;p&gt;I suggest that many historical phenomena act have analogous behavior. One example might be, the assassination of Arch Duke Franz Ferdinand; another might be the Gulf of Tonkin incident, 9/11, or the battle of Thermopylae.&lt;/p&gt; &lt;p&gt;There &lt;em&gt;are&lt;/em&gt; historical trends and forces, but they are often realized by single explosive events. There was a general trend of anti-imperialism in the early twentieth century. Even though most movements of that trend were minor, it only took one explosive assassination to change world history irrevocably.&lt;/p&gt; &lt;h2 id=&quot;looking-to-the-future&quot;&gt;Looking to the Future&lt;/h2&gt; &lt;p&gt;The &lt;em&gt;average value&lt;/em&gt; of a Gaussian or Cauchy distribution is zero (move neither to the left or to the right). &lt;em&gt;On average&lt;/em&gt;, when we throw the rock straight up, it lands on top of me. The left moves will cancel out the right moves and it will end up not far from where starts (the distribution is symmetric). The &lt;em&gt;average&lt;/em&gt; may be easy to predict, but &lt;em&gt;reality&lt;/em&gt; might be different.&lt;/p&gt; &lt;p&gt;In the Gaussian random walk, most of the moves are medium. In the Cauchy most of the moves are very small, or very large. A few very extreme moves cause most of the movement away from the expected value. As a result, the average predicts reality quite poorly. It would have been completely debunked by any one of those extreme moves.&lt;/p&gt; &lt;p&gt;This is why markets are so difficult to predict. There are a few unpredictable and extreme events which cause most of the movement (called “black swan events”). On average, prices are constant or increasing steadily (due to inflation), but then the OPEC declares an embargo and the price of oil becomes 300% larger. Or hurricane Katrina hits. That is an unlikely and extreme event that screws up the models. &lt;a href=&quot;https://dollarvigilante.com/blog/2016/08/09/nassim-taleb-warns-biggest-black-swan-event-coming.html&quot;&gt;Some argue&lt;/a&gt; that lack of recognition of black swan events played a part in causing the housing crisis.&lt;/p&gt; &lt;p&gt;Should we try harder to predict black swan events with models? There will never be enough data-points to do useful analysis of them because of their characteristic rarity. The best we can do is remember that every model is fallible and engineer the robustness necessary to handle that fallibility. These are “unknown unknowns” in &lt;a href=&quot;https://en.wikipedia.org/wiki/There_are_known_knowns&quot;&gt;the parlance of Donald Rumsfeld&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Don’t confuse unlikely with impossible.&lt;/p&gt;</content><author><name>Samuel Grayson</name></author><category term="math"/><category term="history"/><summary type="html">In a previous post, I talked about how a few random events can greatly change history. In this post, I will describe that in terms of mathematics and use that to show you why things like stock markets are so difficult to predict.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samgrayson.me/assets/img/chaos-of-history-2/jackson_pollock.jpg"/></entry><entry><title type="html">Zealots of Tech</title><link href="https://samgrayson.me/2016-08-12-zealots-of-tech/" rel="alternate" type="text/html" title="Zealots of Tech"/><published>2016-08-12T00:00:00-05:00</published><updated>2016-08-12T00:00:00-05:00</updated><id>https://samgrayson.me/zealots-of-tech</id><content type="html" xml:base="https://samgrayson.me/2016-08-12-zealots-of-tech/">&lt;h2 id=&quot;welcome-to-the-cult&quot;&gt;Welcome to the Cult&lt;/h2&gt; &lt;p&gt;There are few techniques that are globally applicable in software development. But we like to act is if that were not the case.&lt;/p&gt; &lt;p&gt;This is most apparent in programming languages. You have headstrong engineers who insist that their programming language is better than yours, with &lt;a href=&quot;https://www.reddit.com/r/haskell/comments/3of8zk/the_cult_of_haskell_is_my_favourite_programming/&quot;&gt;cult-like devotion&lt;/a&gt;. Most of the time, programming languages have different strengths and weaknesses, so the ‘best’ programming language depends on the problem. It is religious zealotry when they don’t hear out arguments against their language of choice. But that insistence is mostly unfounded. Look at the sentiment on &lt;a href=&quot;https://www.quora.com/What-are-the-best-programming-languages-to-learn-today&quot;&gt;this quora question&lt;/a&gt; on the ‘best programming language’ with many comments like “depends on what you want to optimize” and “it’s far more important to learn to be a good programmer.”&lt;/p&gt; &lt;p&gt;Managers and investors have a different set of biases about programming languages: they insist on using what everyone else is using. They know that Java on tomcat is a popular choice for web development. They block out other options like Ruby on Rails, which might better suit a startup that needs to &lt;a href=&quot;https://www.minddigital.com/ruby-on-rails-for-robust-and-rapid-development/&quot;&gt;go from 0 to 60&lt;/a&gt;, because of their fundamentalist belief that some programming language or technique is the &lt;em&gt;only&lt;/em&gt; way. What’s worse is when they prevent an innovative solution from being developed because “it’s &lt;a href=&quot;http://paulgraham.com/icad.html&quot;&gt;not industry standard&lt;/a&gt;.” &lt;em&gt;Aside: That utterance is the sound of a good idea dying an unnecessary death in a company that reeks of mediocrity.&lt;/em&gt;&lt;/p&gt; &lt;h2 id=&quot;critical-thinking&quot;&gt;Critical Thinking&lt;/h2&gt; &lt;p&gt;There is some value in using languages you have deep prior knowledge of, but there is also value in keeping your mind sharp by learning new things. Technology is changing so fast that the tools you feel comfortable with may not be relevant anymore. There is also value in using a technique that has a large community for support, but that argument is often weighed too heavily against other, more direct advantages (see &lt;a href=&quot;http://waitbutwhy.com/2015/11/the-cook-and-the-chef-musks-secret-sauce.html&quot;&gt;Tim Urban’s post&lt;/a&gt; at headline “The Cook and the Chef”).&lt;/p&gt; &lt;p&gt;Human tendency is to jump on the hype bandwagon and follow the crowd. It is the underlying habit of humans to fall into &lt;a href=&quot;https://en.wikipedia.org/wiki/Groupthink&quot;&gt;groupthink&lt;/a&gt; caused by laziness. It isn’t an overt laziness like skipping work, it is a subconscious laziness that avoids critical evaluation of one’s own opinions. It isn’t too dissimilar from the echo-chamber of our political environment, or a &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Emperor%27s_New_Clothes&quot;&gt;naked emperor&lt;/a&gt; who claims that only the intelligent are able to see his new clothes.&lt;/p&gt; &lt;p&gt;The next time you hear “do this because it is more RESTful”, you should ask yourself “why are we embracing REST here. Does it make sense?” That way you justify your design decisions based on the problem itself, not some principle you have forced your solution to conform to. Don’t be afraid to question the prevailing wisdom like a &lt;a href=&quot;https://en.wikipedia.org/wiki/Social_gadfly&quot;&gt;gadfly&lt;/a&gt;. “Yes, I know this diverges from the principles of REST, but our multi-part search query isn’t conducive to RESTful URI design since the components are not hierarchical.”&lt;/p&gt; &lt;p&gt;I leave you with the old Unix adage of pragmatism: &lt;em&gt;use the right tool for the job&lt;/em&gt;.&lt;/p&gt;</content><author><name>Samuel Grayson</name></author><category term="programming"/><summary type="html">There are few technologies and methodologies that are globally applicable in software development, be it REST, agile methodology, or Python. But we like to act is if that were the case. Instead flexible and pragmatic enough to use the right tool for the job.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samgrayson.me/assets/img/zealots_of_tech/tools.jpg"/></entry><entry><title type="html">The Chaos of History (part 1)</title><link href="https://samgrayson.me/2016-07-21-chaos-of-history-1/" rel="alternate" type="text/html" title="The Chaos of History (part 1)"/><published>2016-07-21T00:00:00-05:00</published><updated>2016-07-21T00:00:00-05:00</updated><id>https://samgrayson.me/chaos-of-history-1</id><content type="html" xml:base="https://samgrayson.me/2016-07-21-chaos-of-history-1/">&lt;h2 id=&quot;one-who-causes-history&quot;&gt;One Who Causes History&lt;/h2&gt; &lt;p&gt;Think of the history of the twentieth century and who is most responsible for it. You might be thinking of world leaders like Franklin Delano Roosevelt, Joseph Stalin, or Mao Zedong. Or perhaps you are thinking of those who invented the technology that changed the world, such as Albert Einstein or Tim Berners-Lee.&lt;/p&gt; &lt;p&gt;But I suggest a man you probably haven’t heard of named Gravilo Princip.&lt;/p&gt; &lt;p&gt;The day started off poorly for Archduke Franz Ferdinand when three security officials were left behind, by mistake. Then an assassin threw a bomb at his car, and the rest is history!&lt;/p&gt; &lt;p&gt;Actually, it isn’t. The bomb bounced off his car and the exploded without injuring the Archduke. The motorcade sped away to protect him from any other assassination attempts. This moment is what Ceasar must have felt when he exclaimed “The Ides of March have come, and I am still alive!”.&lt;/p&gt; &lt;p&gt;Princip realized he lost his chance, so he gave up and went to a nearby food shop. But when the motorcade started up again, someone forgot to tell the driver to change the route. By the time the Archuke’s staff realized, the transmission jammed in their automobile (still a recent invention), so the it stopped &lt;em&gt;right in front of an awe-stricken Pincip&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;By a ridiculous stroke of misfortune (or luck, depending on your point of view), between the security officials being left behind, the first failed assassination attempt, the driver not knowing the route, the transmission jamming, Gravilo Princip had his opportunity. On June 28, Princip shot and killed Archduke Ferdinand, setting in motion a chain of events which would result in the First World War.&lt;/p&gt; &lt;h2 id=&quot;princips-butterfly-effect&quot;&gt;Princip’s Butterfly Effect&lt;/h2&gt; &lt;p&gt;As you might know, the treaty which ended World War One involved massive war reparations to be paid by the Germans. The German people came to resent of these foreign powers spread, making it possible for the Nazis to come to power. Thus begins World War Two.&lt;/p&gt; &lt;p&gt;As you might know, the victors of World War Two partitioned off Europe, and while they were doing so, certain tensions among the victors emerged. This led to the stand off of the Cold War.&lt;/p&gt; &lt;p&gt;So Princip brought about a series of events which caused the Cold War. Or perhaps the Archduke’s driver should be the one whom we say brought about these events. Or perhaps the man who owned the food shop that Princip stopped at, for if he were not there perhaps Princip would gone to a different place that wasn’t on the motorcade’s route.&lt;/p&gt; &lt;p&gt;Some would counterargue that the Austro-Hungarian empire was already ripe for conflict, and if not Princip, then someone else would set it off. But if it was set off in the middle east as a result of Ottoman aggression (there was unrest in the region ever since the Young Turk Revolution). Maybe the alignment would have been different. Russia would not feel compelled to defend the Slavic peoples, and maybe Russia uses this hypothetical war to seek a warm-water port, and with the manpower of Russia weighing on the other side of the scale, the outcome could be drastically different. The specific details of these events can matter a lot&lt;/p&gt; &lt;h2 id=&quot;false-assumptions&quot;&gt;False Assumptions&lt;/h2&gt; &lt;p&gt;We like to think that systems like human society have some predictable order. We like to think that this order is affected by world leaders and important people. We like to think that things happen for compelling reasons. But when a world war breaks out on account of the chauffeurs wrong turn, I realize that human society is so vastly complex and intricate that some events are just so ‘out there’ to be foreseen.&lt;/p&gt; &lt;p&gt;Historical trends and forces are powerful and determine the ‘steady’ events, like the US economy growing a few percentage points per year. However The most interesting events that really make a change, like the housing crisis or 9/11, are completely random and unforeseen, even by scholars. That course of history wasn’t determined by simple rules ore logical reasons. It’s just Lady Fortuna spinning her wheel.&lt;/p&gt; &lt;h2 id=&quot;further-reading&quot;&gt;Further Reading&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/2017-01-09-chaos-of-history-2/&quot;&gt;Part 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Scientific American: &lt;a href=&quot;http://blogs.scientificamerican.com/the-curious-wavefunction/gavrilo-princip-conspiracy-theories-and-the-fragility-of-cause-and-effect/&quot;&gt;Gavrilo Princip, conspiracy theories and the fragility of cause and effect&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://www.nytimes.com/2007/04/22/books/chapters/0422-1st-tale.html?_r=0&quot;&gt;Chapter 1&lt;/a&gt; of ‘The Black Swan’ by Nassim Taleb&lt;/li&gt; &lt;/ul&gt;</content><author><name>Samuel Grayson</name></author><category term="history"/><summary type="html">We like to think that systems like human society have some predictable order, when in reality, history is driven by completely unpredictable random events.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://samgrayson.me/assets/img/chaos-of-history-1/Assassination_of_Archduke_Franz_Ferdinand.jpg"/></entry></feed>